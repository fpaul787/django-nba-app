{"version":3,"sources":["components/Spinner/spinner.gif","store/reducers/games.js","store/utility.js","store/reducers/auth.js","store/actions/types.js","store/reducers/index.js","store/store.js","components/layout/Home/homeStyles.js","components/layout/Home/Home.js","store/actions/auth.js","components/layout/Header/Header.js","components/Spinner/Spinner.js","components/Games/GameStyles.js","components/Games/GamesTable/GamesTableStyles.js","components/Games/GamesTable/GamesTable.js","components/Games/Calendar/CalenderStyles.js","components/Games/Calendar/Cal.js","components/utility/parseDate.js","components/Games/Games.jsx","components/auth/LogIn.js","components/auth/Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","games","updateObject","oldObject","updatedProperties","token","error","loading","authStart","state","action","authSuccess","authFail","authLogout","reducer","type","combineReducers","gamesReducer","console","log","payload","Object","assign","authReducer","auth","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","bodyStyle","textAlign","Home","style","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","withRouter","connect","actions","props","className","role","aria-label","to","isAuthenticated","onClick","src","spinner","width","margin","display","alt","GamesStyles","makeStyles","root","flexGrow","gamesPaper","paddingRight","paddingLeft","marginBottom","height","overflowY","background","showGamesItem","marginLeft","color","marginTop","gameInfoItem","minWidth","ListItem","datePickerGrid","gamesDisplayGrid","gameTableGrid","GamesTableStyles","gameInfotable","marginRight","overflowX","table","title","flex","GamesTable","gameData","useState","boxscore","setBoxscore","a","gameID","gameId","gameDate","startDateEastern","url","fetch","response","json","responseJSON","useEffect","requestBoxscoreAsynchronously","classes","TableContainer","Typography","variant","id","Spinner","stats","gameInfoTable","Table","TableHead","TableRow","TableCell","TableBody","component","basicGameData","startTimeEastern","visitingTeamStatsLeaders","vTeam","leaders","homeTeamStatsLeaders","hTeam","Grid","item","xs","sm","triCode","points","players","lastName","value","rebounds","assists","CalendarStyles","datePicker","backgroundColor","fontSize","calendar","gamesDate","handleClick","selected","onChange","date","minDate","Date","maxDate","parseDate","customDate","separator","reverse","day","getDate","month","getMonth","year","getFullYear","Games","gamesData","setGamesData","setGameData","setGameDate","requestGames","container","direction","alignItems","spacing","Paper","List","map","game","key","button","ListItemText","primary","onAuth","username","password","axios","post","then","res","data","expirationDate","getTime","setItem","catch","errorMessage","message","name","initialValues","remember","onFinish","values","history","push","Item","rules","required","prefix","UserOutlined","placeholder","LockOutlined","valuePropName","noStyle","href","htmlType","email","password1","password2","Form","useForm","form","confirm","residence","scrollToFirstError","label","hasFeedback","Password","dependencies","getFieldValue","validator","rule","Promise","reject","resolve","onTryAutoSignup","getItem","undefined","exact","path","Login","Register","Boolean","window","location","hostname","match","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3f4c6a79.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.0c6f34a3.gif\";","import {GET_GAMES} from '../actions/types'\r\n\r\n\r\n// function that takes in an action\r\n// and send down certain state \r\n// depending on action\r\n\r\nconst initialState = {\r\n    games: [] // what we're fetching from backend\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        \r\n        case GET_GAMES:\r\n            console.log(action.payload)\r\n            \r\n            return{\r\n                ...state,                 \r\n                games: Object.assign({}, state, {\r\n                    games: action.payload\r\n                })\r\n            }\r\n           \r\n        default:\r\n            return state\r\n    }\r\n}","export const updateObject = (oldObject, updatedProperties) => {\r\n    return{\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n}","import * as actionTypes from '../actions/types'\r\nimport {updateObject} from '../utility'\r\n\r\nconst initialState ={\r\n    token: null,\r\n    error: null,\r\n    loading: false\r\n}\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, {\r\n        error: null,\r\n        loading: true\r\n    })\r\n}\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        token: action.token,\r\n        error: null,\r\n        loading: false\r\n    })\r\n}\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject(state, {\r\n        error: action.error,\r\n        loading: false\r\n    })\r\n}\r\n\r\nconst authLogout = (state, action) =>{\r\n    return updateObject(state, {\r\n        token: null\r\n    })\r\n}\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    \r\n    switch(action.type){\r\n        case actionTypes.AUTH_START:\r\n            return authStart(state, action)\r\n        case actionTypes.AUTH_SUCCESS:\r\n            return authSuccess(state, action)\r\n        case actionTypes.AUTH_FAIL:\r\n            return authFail(state, action)\r\n        case actionTypes.AUTH_LOGOUT:\r\n            return authLogout(state, action)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer","export const GET_GAMES = \"GET_GAMES\"\r\nexport const AUTH_START = 'AUTH_START'\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\r\nexport const AUTH_FAIL = 'AUTH_FAIL'\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\r\n\r\n","// meeting place for all other reducers\r\nimport {combineReducers} from 'redux'\r\nimport games from './games'\r\nimport auth from './auth'\r\n\r\nexport default combineReducers({\r\n    gamesReducer: games,\r\n    authReducer: auth\r\n})","import {createStore, applyMiddleware } from 'redux'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store","export const bodyStyle = {\r\n    textAlign: \"center\"\r\n}","import React from 'react'\r\nimport {bodyStyle} from './homeStyles'\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div >\r\n            <body style={bodyStyle}>\r\n                Track the stat leaders for any game!\r\n                Click on track games to begin\r\n            </body>\r\n        </div>\r\n    )\r\n}\r\n","import * as actionTypes from './types'\r\nimport axios from 'axios'\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START,\r\n    }\r\n}\r\n\r\nexport const authSuccess = (token) => {\r\n    \r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        token: token,\r\n    }\r\n}\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error,\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('user')\r\n    localStorage.removeItem('expirationDate');\r\n    return{\r\n        type: actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport const checkAuthTimeout = expirationTime => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            // once time has arrived\r\n            dispatch(logout())\r\n        }, expirationTime * 1000)\r\n    }\r\n}\r\n\r\nexport const authLogin = (username, password)  => {\r\n    return dispatch => {\r\n        dispatch(authStart())\r\n        \r\n        \r\n        axios.post('http://localhost:8000/rest-auth/login/', {\r\n\r\n        username: username,\r\n        password: password\r\n            \r\n            \r\n        }).then(res => {\r\n            \r\n            const token = res.data.key\r\n            \r\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000)\r\n\r\n            // store in local storage\r\n            localStorage.setItem('token', token);\r\n            localStorage.setItem('expirationDate', expirationDate)\r\n            dispatch(authSuccess(token))\r\n            dispatch(checkAuthTimeout(3600))\r\n        })\r\n        .catch(error => {\r\n            dispatch(authFail(error))\r\n            console.log('Could not login :(', error)\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const authSignup = (username, email, password1, password2)  => {\r\n    return dispatch => {\r\n        dispatch(authStart())\r\n        axios.post('http://127.0.0.1:8000/rest-auth/registration', {\r\n            username: username,\r\n            email: email,\r\n            password1: password1,\r\n            password2: password2\r\n        }).then(res => {\r\n            const token = res.data.key\r\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000)\r\n\r\n            // store in local storage\r\n            localStorage.setItem('token', token);\r\n            localStorage.setItem('expirationDate', expirationDate)\r\n            dispatch(authSuccess(token))\r\n            dispatch(checkAuthTimeout(3600))\r\n        })\r\n        .catch(error => {\r\n            dispatch(authFail(error))\r\n            console.log('Could not register', error)\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token')\r\n        if(token === undefined){\r\n            dispatch(logout())\r\n        }else{\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n            if (expirationDate <= new Date()){\r\n                dispatch(logout())\r\n            }else{\r\n                dispatch(authSuccess(token))\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) /1000))\r\n            }\r\n        }\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport * as actions from '../../../store/actions/auth'\r\nimport {connect} from 'react-redux'\r\n\r\nfunction Header(props) {    \r\n    \r\n    return (\r\n        \r\n        <div>\r\n            <nav\r\n                className=\"navbar navbar-light bg-dark\"\r\n                role=\"navigation\"\r\n                aria-label=\"main navigation\"\r\n            >\r\n                <div>\r\n                    <Link className=\"navbar-brand\" to=\"/\">\r\n                        Logo\r\n                    </Link>\r\n                </div>\r\n\r\n                <div className=\"mr-auto ml-auto\">\r\n                    <div className=\"navbar-item\">\r\n                        <Link\r\n                            to=\"/games\"\r\n                            className=\"btn btn-md btn-outline-secondary mx-2\"\r\n                        >\r\n                            <strong>Track Games</strong>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"\">\r\n                    <div className=\"navbar-item\">\r\n                        {\r\n                            props.auth.isAuthenticated ?\r\n                            <Link\r\n                           \r\n                            className=\"btn btn-md btn-outline-secondary mx-2\"\r\n                            onClick={props.logout}\r\n                        >\r\n                            <strong>Logout</strong>\r\n                        </Link>\r\n                            :\r\n                            <div>\r\n                            <Link\r\n                            to=\"/login\"\r\n                            className=\"btn btn-md btn-outline-secondary mx-2\"\r\n                        >\r\n                            <strong>Login</strong>\r\n                        </Link>\r\n                        <Link\r\n                            to=\"/register\"\r\n                            className=\"btn btn-md btn-outline-secondary mx-2\"\r\n                        >\r\n                            <strong>Register</strong>\r\n                        </Link>\r\n                            </div>\r\n                            \r\n                        }\r\n                    \r\n                        \r\n                    </div>\r\n                    \r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logout: () => dispatch(actions.logout())\r\n    }\r\n}\r\n\r\nexport default withRouter (connect(null, mapDispatchToProps)(Header))","import React, { Fragment } from 'react'\r\nimport spinner from './spinner.gif'\r\n\r\nexport default () => (\r\n    <Fragment>\r\n        <img\r\n            src={spinner}\r\n            style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n            alt=\"Loading...\"\r\n        />\r\n    </Fragment>\r\n)\r\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst GamesStyles = makeStyles({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    gamesPaper: {\r\n        paddingRight: 50,\r\n        paddingLeft: 50,\r\n        \r\n        marginBottom: 30,\r\n        \r\n        \r\n        height: 500,\r\n        width: 300,\r\n        overflowY: 'auto',\r\n        background: '#343a40',\r\n    },\r\n    showGamesItem: {\r\n        marginLeft: -50,\r\n        width: 'auto',\r\n        height: 'auto',\r\n\r\n        '& p': {\r\n            textAlign: 'center',\r\n            color: 'black',\r\n            marginTop: 30,\r\n        },\r\n    },\r\n\r\n    gameInfoItem: {\r\n       \r\n        background: 'white',\r\n        minWidth: 300,\r\n        \r\n        width: 'auto',\r\n        height: 300,\r\n    },\r\n\r\n    ListItem: {\r\n        background: 'pink',\r\n        textAlign: 'center',\r\n\r\n        marginTop: 30,\r\n        marginBottom: 30,\r\n    },\r\n\r\n\r\n    datePickerGrid: {\r\n        marginLeft: 70,\r\n        marginTop: 50    \r\n    },\r\n\r\n    gamesDisplayGrid: {\r\n        marginLeft: 40,\r\n        marginTop: 50\r\n    },\r\n\r\n    gameTableGrid:{\r\n        marginLeft: 70,\r\n        marginTop: 50,   \r\n    }\r\n\r\n    \r\n})\r\n\r\nexport default GamesStyles\r\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst GamesTableStyles = makeStyles({\r\n    \r\n\r\n    gameInfotable: {       \r\n        background: '#343a40',\r\n        minWidth: 600,        \r\n        width: 'auto',\r\n        height: 300,\r\n        marginRight: 30,\r\n        overflowX: 'scroll'\r\n    },\r\n\r\n    \r\n    table: {\r\n        minWidth: 500,      \r\n        width: 'auto',\r\n        'background': 'pink',\r\n        \r\n    },\r\n\r\n    title: {\r\n        flex: '1 1 100%',\r\n        textAlign: 'center',\r\n    },\r\n\r\n    \r\n})\r\n\r\nexport default GamesTableStyles\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Grid } from '@material-ui/core'\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n} from '@material-ui/core'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport GamesTableStyles from './GamesTableStyles'\r\nimport Spinner from '../../Spinner'\r\n\r\nconst GamesTable = ({ gameData }) => {\r\n\r\n    const [boxscore, setBoxscore] = useState()\r\n\r\n    async function requestBoxscoreAsynchronously() {\r\n        if (gameData === null) {\r\n            setBoxscore(null)\r\n        } else {\r\n            \r\n            let gameID = gameData.gameId\r\n            let gameDate = gameData.startDateEastern\r\n\r\n            const url = `http://127.0.0.1:8000/games/${gameDate}/${gameID}`\r\n            let response = await fetch(url)\r\n            let responseJSON = await response.json()\r\n            setBoxscore(responseJSON)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        requestBoxscoreAsynchronously()\r\n    }, [gameData])\r\n\r\n    const classes = GamesTableStyles()\r\n\r\n    if (gameData === null) {\r\n        return (\r\n            <Fragment>\r\n                \r\n                    <TableContainer >\r\n                        <Typography\r\n                           \r\n                            variant=\"h6\"\r\n                            id=\"tableTitle\"\r\n                        >\r\n                            Please choose a Game\r\n                        </Typography>\r\n                    </TableContainer>\r\n                \r\n            </Fragment>\r\n        )\r\n    } else if (boxscore == null) {\r\n        return (<Spinner />)\r\n    } else if (boxscore != null && boxscore.stats == null) {\r\n        return (\r\n            <Fragment>\r\n                <div  >\r\n                <Typography\r\n                            className={classes.title}\r\n                            variant=\"h6\"\r\n                            id=\"tableTitle\"\r\n                        >\r\n                            No stats available now. Check again when the game\r\n                            starts.\r\n                        </Typography>\r\n                    <TableContainer className={classes.gameInfoTable}>\r\n                        \r\n                        <Table\r\n                            className={classes.gameInfotable}\r\n                            aria-label=\"simple table\"\r\n                        >\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Game Start</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell component=\"th\">\r\n                                        {\r\n                                            boxscore.basicGameData\r\n                                                .startTimeEastern\r\n                                        }\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    } else {\r\n        console.log(boxscore)\r\n        const visitingTeamStatsLeaders = boxscore.stats.vTeam.leaders\r\n        const homeTeamStatsLeaders = boxscore.stats.hTeam.leaders\r\n\r\n        return (\r\n            <Fragment>\r\n                <Grid item xs={12} sm={6} className={classes.gameInfotable}>\r\n                    <TableContainer className={classes.table}>\r\n                        <Typography\r\n                            className={classes.title}\r\n                            variant=\"h6\"\r\n                            id=\"tableTitle\"\r\n                        >\r\n                            {boxscore.basicGameData.vTeam.triCode +\r\n                                ' VS ' +\r\n                                boxscore.basicGameData.hTeam.triCode}\r\n                        </Typography>\r\n\r\n                        <Table\r\n                            \r\n                            aria-label=\"simple table\"\r\n                            \r\n                        >\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Team</TableCell>\r\n                                    <TableCell>Points</TableCell>\r\n                                    <TableCell>Rebounds</TableCell>\r\n                                    <TableCell>Assist</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell component=\"th\">\r\n                                        {boxscore.basicGameData.vTeam.triCode}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {visitingTeamStatsLeaders.points\r\n                                            .players[0].lastName +\r\n                                            ': ' +\r\n                                            visitingTeamStatsLeaders.points\r\n                                                .value}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {visitingTeamStatsLeaders.rebounds\r\n                                            .players[0].lastName +\r\n                                            ': ' +\r\n                                            visitingTeamStatsLeaders.rebounds\r\n                                                .value}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {visitingTeamStatsLeaders.assists\r\n                                            .players[0].lastName +\r\n                                            ': ' +\r\n                                            visitingTeamStatsLeaders.assists\r\n                                                .value}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell component=\"th\">\r\n                                        {boxscore.basicGameData.hTeam.triCode}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {homeTeamStatsLeaders.points.players[0]\r\n                                            .lastName +\r\n                                            ': ' +\r\n                                            homeTeamStatsLeaders.points.value}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {homeTeamStatsLeaders.rebounds\r\n                                            .players[0].lastName +\r\n                                            ': ' +\r\n                                            homeTeamStatsLeaders.rebounds.value}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {homeTeamStatsLeaders.assists.players[0]\r\n                                            .lastName +\r\n                                            ': ' +\r\n                                            homeTeamStatsLeaders.assists.value}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GamesTable\r\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst CalendarStyles = makeStyles({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    gamesPaper: {\r\n        paddingRight: 50,\r\n        paddingLeft: 50,\r\n        \r\n        marginBottom: 30,\r\n        \r\n        \r\n        height: 500,\r\n        width: 300,\r\n        overflowY: 'auto',\r\n        background: '#343a40',\r\n    },\r\n    showGamesItem: {\r\n        marginLeft: -50,\r\n        width: 'auto',\r\n        height: 'auto',\r\n\r\n        '& p': {\r\n            textAlign: 'center',\r\n            color: 'black',\r\n            marginTop: 30,\r\n        },\r\n    },\r\n\r\n    gameInfoItem: {\r\n       \r\n        background: 'white',\r\n        minWidth: 300,\r\n        \r\n        width: 'auto',\r\n        height: 300,\r\n    },\r\n\r\n    ListItem: {\r\n        background: 'pink',\r\n        textAlign: 'center',\r\n\r\n        marginTop: 30,\r\n        marginBottom: 30,\r\n    },\r\n    table: {\r\n        minWidth: 300,\r\n        width: 'auto',\r\n    },\r\n\r\n    title: {\r\n        flex: '1 1 100%',\r\n        textAlign: 'center',\r\n    },\r\n\r\n    datePickerGrid: {\r\n        marginLeft: 100,\r\n        marginTop: 50    \r\n    },\r\n\r\n    gamesDisplayGrid: {\r\n        marginLeft: 100,\r\n        marginTop: 50\r\n    },\r\n\r\n    datePicker: {\r\n        backgroundColor: '#D3D3D3',\r\n        width: 280,\r\n        fontSize: 'large',\r\n        textAlign: 'center',\r\n        \r\n        \r\n    },\r\n\r\n    gameTableGrid:{\r\n        marginLeft: 100,\r\n        marginTop: 50,\r\n        backgroundColor: 'red'    \r\n    }\r\n\r\n    \r\n})\r\n\r\nexport default CalendarStyles\r\n","import React from 'react'\r\nimport Calender from 'react-calendar'\r\nimport './Calendar.css'\r\nimport { Grid } from '@material-ui/core'\r\nimport CalendarStyles from './CalenderStyles'\r\n\r\n\r\nexport default function calendar({ gamesDate, handleClick }) {\r\n    const classes = CalendarStyles()\r\n\r\n    return (\r\n        <div>\r\n            <Grid>\r\n                <div>\r\n                    <Calender\r\n                        selected={gamesDate}\r\n                        value={gamesDate}\r\n                        onChange={(date) => {\r\n                            handleClick(date)\r\n                        }}\r\n                        minDate={new Date(2015, 10, 6)}\r\n                        maxDate={new Date(2020, 2, 11)}\r\n                        className={classes.datePicker}\r\n                    />\r\n                </div>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n","export function parseDate(customDate, separator = '', reverse = false) {\r\n    if (customDate == null) {\r\n        customDate = new Date()\r\n    }\r\n\r\n    let day = customDate.getDate()\r\n    let month = customDate.getMonth() + 1\r\n    let year = customDate.getFullYear()\r\n\r\n    if (reverse) {\r\n        return `${month < 10 ? `0${month}` : `${month}`}${separator}${\r\n            day < 10 ? `0${day}` : `${day}`\r\n        }${separator}${year}`\r\n    }\r\n\r\n    return `${year}${separator}${\r\n        month < 10 ? `0${month}` : `${month}`\r\n    }${separator}${day < 10 ? `0${day}` : `${day}`}`\r\n}","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Grid, Paper, List ,ListItem, ListItemText} from '@material-ui/core'\r\nimport Spinner from '../Spinner'\r\nimport GamesStyles from './GameStyles'\r\nimport GamesTable from './GamesTable/GamesTable'\r\nimport {CustomCalendar} from './Calendar'\r\nimport {parseDate} from '../utility/parseDate' // utility function to parse date from calendar choice\r\n\r\n\r\nconst Games = () => {\r\n    const [gamesData, setGamesData] = useState(null)\r\n    const [gameData, setGameData] = useState(null)\r\n    const [gameDate, setGameDate] = useState(null)\r\n    const classes = GamesStyles()\r\n\r\n\r\n    async function requestGames() {\r\n        if(gameDate === null){\r\n            setGameDate(new Date(2020, 2, 11))\r\n        }\r\n        var date = parseDate(gameDate)\r\n\r\n        try{\r\n            let response = await fetch(`http://127.0.0.1:8000/games/${date}`)\r\n            let responseJSON = await response.json()\r\n            setGamesData(responseJSON)\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    function handleDateChange(date){\r\n        setGameDate(date)\r\n    }\r\n\r\n    // useEffect Hook is similar to\r\n    // componentDidMunt, componentDidUpdate,\r\n    // and componentWillUnmount\r\n    // By using this Hook, you tell React that\r\n    // your component needs to do something after render.\r\n    useEffect(() => {\r\n        requestGames() // check    \r\n    }, [gameDate])\r\n\r\n    // data has not been loaded yet\r\n    if (gamesData == null) {\r\n        return (<Spinner />)\r\n    } else {\r\n\r\n        // change this\r\n        const games = gamesData.games\r\n        \r\n        return (\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                alignItems=\"flex-start\"\r\n                spacing={1}\r\n                className={classes.root}\r\n            >\r\n                <Grid className={classes.datePickerGrid} item xs={2} >\r\n                    <h4>Pick a date </h4>\r\n                    <CustomCalendar gamesDate={new Date()} handleClick={handleDateChange}/>                    \r\n                </Grid>\r\n\r\n                <Grid className={classes.gamesDisplayGrid} item xs={3}>\r\n                    <h4>Games on {parseDate(gameDate, '/', true)}:</h4>\r\n                    <Paper className={classes.gamesPaper}>\r\n                        <Fragment>\r\n                            <List>\r\n                                {games.map((game) => {\r\n                                    return (\r\n                                        <ListItem\r\n                                            key={game.gameId}\r\n                                            button\r\n                                            className={classes.ListItem}\r\n                                            onClick={() => {\r\n                                                setGameData(game)\r\n                                            }}\r\n                                        >\r\n                                            <ListItemText\r\n                                                primary={\r\n                                                    game.vTeam.triCode +\r\n                                                    ' VS ' +\r\n                                                    game.hTeam.triCode\r\n                                                }\r\n                                            />\r\n                                        </ListItem>\r\n                                    )\r\n                                })}\r\n                            </List>\r\n                        </Fragment>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid container item xs={4} spacing={3} className={classes.gameTableGrid}>\r\n                <h4>Game Track</h4>\r\n                    <GamesTable gameData={gameData} />\r\n                </Grid>                \r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Games","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Form, Input, Button } from 'antd'\r\n\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport './auth.css'\r\nimport { Spin } from 'antd'\r\nimport * as actions from '../../store/actions/auth'\r\n\r\n\r\n\r\nconst LogIn = (props) => {\r\n    const onFinish = values => {\r\n        \r\n        \r\n        props.onAuth(values.username, values.password)\r\n        props.history.push('/') // redirect\r\n      };\r\n\r\n    \r\n    let errorMessage = null\r\n    if (props.error) {\r\n        errorMessage = <p>{props.error.message}</p>\r\n    }\r\n    return (\r\n        <div>\r\n            {errorMessage}\r\n            {props.loading ? (\r\n                <Spin />\r\n            ) : (\r\n                <Form\r\n                    name=\"normal_login\"\r\n                    className=\"login-form\"\r\n                    initialValues={{\r\n                        remember: true,\r\n                    }}\r\n                    onFinish={onFinish}\r\n                >\r\n                    <Form.Item\r\n                        name=\"username\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your Username!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input\r\n                            prefix={\r\n                                <UserOutlined className=\"site-form-item-icon\" />\r\n                            }\r\n                            placeholder=\"Username\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"password\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your Password!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input\r\n                            prefix={\r\n                                <LockOutlined className=\"site-form-item-icon\" />\r\n                            }\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Form.Item\r\n                            name=\"remember\"\r\n                            valuePropName=\"checked\"\r\n                            noStyle\r\n                        >\r\n                            \r\n                        </Form.Item>\r\n\r\n                        <a className=\"login-form-forgot\" href=\"\">\r\n                            Forgot password\r\n                        </a>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            htmlType=\"submit\"\r\n                            style={{ marginRight: '10px' }}\r\n                        >\r\n                            Login\r\n                        </Button>\r\n                        Or\r\n                        <Link\r\n                            style={{ marginLeft: '10px', marginRight: '10px' }}\r\n                            to=\"/register\"\r\n                        >\r\n                            Sign Up\r\n                        </Link>\r\n                    </Form.Item>\r\n                </Form>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.loading,\r\n        error: state.error,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onAuth: (username, password) =>\r\n            dispatch(actions.authLogin(username, password)),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LogIn)\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Input, Button } from 'antd'\r\nimport * as actions from '../../store/actions/auth'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Register = (props) => {\r\n    const [form] = Form.useForm()\r\n\r\n    const onFinish = (values) => {\r\n        // console.log('Received values of form: ', values)\r\n\r\n        props.onAuth(\r\n            values.username,\r\n            values.email,\r\n            values.password1,\r\n            values.password2,\r\n            values.confirm\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            form={form}\r\n            name=\"register\"\r\n            onFinish={onFinish}\r\n            initialValues={{\r\n                residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n                prefix: '86',\r\n            }}\r\n            scrollToFirstError\r\n        >\r\n            <Form.Item\r\n                name=\"email\"\r\n                label=\"E-mail\"\r\n                rules={[\r\n                    {\r\n                        type: 'email',\r\n                        message: 'The input is not valid E-mail!',\r\n                    },\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your E-mail!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n            \r\n            <Form.Item\r\n                name=\"username\"\r\n                label=\"Username\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your username!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your password!',\r\n                    },\r\n                ]}\r\n                hasFeedback\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"confirm\"\r\n                label=\"Confirm Password\"\r\n                dependencies={['password']}\r\n                hasFeedback\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please confirm your password!',\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                        validator(rule, value) {\r\n                            if (!value || getFieldValue('password') === value) {\r\n                                return Promise.resolve()\r\n                            }\r\n\r\n                            return Promise.reject(\r\n                                'The two passwords that you entered do not match!'\r\n                            )\r\n                        },\r\n                    }),\r\n                ]}\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n                <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    style={{ marginRight: '10px' }}\r\n                >\r\n                    Register\r\n                </Button>\r\n                Or\r\n                <Link\r\n                    style={{ marginLeft: '10px', marginRight: '10px' }}\r\n                    to=\"/login\"\r\n                >\r\n                    Login\r\n                </Link>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.loading,\r\n        error: state.error,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onAuth: (username, email, password1, password2) =>\r\n            dispatch(actions.authSignup(username, email, password1, password2)),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)\r\n","import React, { Fragment, useEffect } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport { Home, Header, Games, Login, Register } from './components/exports'\r\nimport { connect} from 'react-redux'\r\n\r\nimport * as actions from './store/actions/auth'\r\n\r\nfunction App(props) {\r\n\r\n    useEffect(() => {\r\n        console.log('App js', props.isAuthenticated)\r\n        props.onTryAutoSignup()\r\n    })\r\n    \r\n    return (\r\n        \r\n        <Router>\r\n            <Fragment>\r\n                <Header auth={props}/>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Home}></Route>\r\n                    <Route exact path=\"/games\" component={Games}/>\r\n                    <Route exact path=\"/login\" component={Login} />\r\n                    <Route exact path=\"/register\" component={Register} />\r\n                </Switch>\r\n            </Fragment>\r\n        </Router>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    \r\n    return {\r\n        \r\n        isAuthenticated: state.authReducer.token !== null,\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onTryAutoSignup: () => dispatch(actions.authCheckState())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux'\r\nimport store from './store/store'\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport $ from 'jquery'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n  <App />\r\n  </Provider>\r\n)\r\n\r\nReactDOM.render(\r\n  app,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n"],"sourceRoot":""}