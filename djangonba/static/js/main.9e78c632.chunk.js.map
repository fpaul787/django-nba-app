{"version":3,"sources":["store/reducers/games.js","store/reducers/game.js","store/utility.js","store/reducers/auth.js","store/actions/types.js","store/reducers/alert.js","store/reducers/index.js","store/store.js","components/layout/Home/homeStyles.js","components/layout/Home/Home.js","store/actions/alert.js","store/actions/auth.js","components/layout/Header/Header.js","components/Spinner/Spinner.js","components/Games/GameStyles.js","components/Games/GamesTable/GamesTableStyles.js","components/Games/GamesTable/ColorButton.js","components/Games/GamesTable/GamesTable.js","store/actions/game.js","components/Games/Calendar/CalenderStyles.js","components/Games/Calendar/Cal.js","components/utility/parseDate.js","store/actions/games.js","components/Games/Games.jsx","components/auth/LogIn.js","components/auth/Register.js","components/layout/404/NoMatch.js","components/routing/PrivateRoute.js","components/dashboard/GamesTableStyles.js","components/dashboard/DashboardGameTable.js","components/dashboard/dashboard.js","components/layout/Alert/Alert.js","App.js","serviceWorker.js","index.js","components/layout/Home/demo.gif","components/layout/Header/trackerlogo.png","components/Spinner/spinner.gif"],"names":["initialState","games","game","updateObject","oldObject","updatedProperties","token","error","loading","isAuthenticated","username","authStart","state","action","authSuccess","authFail","authLogout","reducer","type","combineReducers","gamesReducer","payload","authReducer","auth","alertReducer","filter","alert","id","gameReducer","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","bodyStyle","textAlign","imgStyle","width","height","Home","style","src","logo","alt","setAlert","msg","alertType","registrationError","timeout","dispatch","idList","Object","keys","forEach","key","uuid","push","setTimeout","pop","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","withRouter","connect","actions","props","authLinks","className","marginTop","marginRight","color","to","onClick","guestLinks","role","aria-label","spinner","margin","display","GamesStyles","makeStyles","root","flexGrow","gamesPaper","paddingRight","paddingLeft","marginBottom","overflowY","background","showGamesItem","marginLeft","gameInfoItem","minWidth","ListItem","datePickerGrid","gamesDisplayGrid","gameTableGrid","GamesTableStyles","gameInfotable","overflowX","table","title","flex","button","ColorButton","withStyles","backgroundColor","pink","Button","GamesTable","gameData","boxscore","useSelector","useDispatch","useEffect","gameID","gameId","gameDate","startDateEastern","axios","get","then","res","data","catch","err","console","log","classes","TableContainer","Typography","variant","Spinner","stats","gameInfoTable","Table","TableHead","TableRow","TableCell","TableBody","component","basicGameData","startTimeEastern","visitingTeamStatsLeaders","vTeam","leaders","homeTeamStatsLeaders","hTeam","Grid","item","xs","sm","triCode","points","players","lastName","value","rebounds","assists","event","preventDefault","gameID_token","slice","defaults","headers","Authorization","post","alert_action","response","CalendarStyles","datePicker","fontSize","calendar","gamesDateProp","handleClick","selected","onChange","date","minDate","Date","maxDate","parseDate","customDate","separator","reverse","day","getDate","month","getMonth","year","getFullYear","Games","gamesData","useState","setGameData","setGameDate","container","direction","alignItems","spacing","Paper","List","map","ListItemText","primary","onAuthLogin","password","expirationDate","getTime","setItem","errorMessage","non_field_errors","formData","setFormData","e","target","name","onSubmit","a","message","placeholder","onAuthSignUp","email","password1","password2","errorMessages","NoMatch","PrivateRoute","Component","render","DashboardGamesTable","getItem","delete","window","location","Dashboard","userGames","setUserGames","length","padding","DashboardGameTable","dispaly","alerts","onTryAutoSignup","undefined","exact","path","Track","Login","Register","Boolean","hostname","match","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"iRAOMA,EAAe,CACjBC,MAAO,MCLLD,EAAe,CACjBE,KAAM,MCJGC,EAAe,SAACC,EAAWC,GACpC,sBACOD,EADP,GAEOC,ICALL,EAAc,CAChBM,MAAO,KACPC,MAAO,KACPC,SAAS,EACTC,gBAAiB,KACjBC,SAAU,MAGRC,EAAY,SAACC,EAAOC,GACtB,OAAOV,EAAaS,EAAO,CACvBL,MAAO,KACPC,SAAS,KAIXM,EAAc,SAACF,EAAOC,GACxB,OAAOV,EAAaS,EAAO,CACvBN,MAAOO,EAAOP,MACdC,MAAO,KACPC,SAAS,EACTC,iBAAiB,EACjBC,SAAUG,EAAOH,YAInBK,EAAW,SAACH,EAAOC,GACrB,OAAOV,EAAaS,EAAO,CACvBL,MAAOM,EAAON,MACdC,SAAS,EACTC,iBAAiB,KAInBO,EAAa,SAACJ,EAAOC,GACvB,OAAOV,EAAaS,EAAO,CACvBN,MAAO,KACPE,SAAS,EACTC,iBAAiB,EACjBC,SAAU,QAqBHO,EAjBC,WAAiC,IAAhCL,EAA+B,uDAAzBZ,EAAca,EAAW,uCAG5C,OAAOA,EAAOK,MACV,IC/CkB,aDgDd,OAAOP,EAAUC,GACrB,IChDoB,eDiDhB,OAAOE,EAAYF,EAAOC,GAC9B,ICjDiB,YDkDb,OAAOE,EAASH,EAAOC,GAC3B,IClDmB,cDmDf,OAAOG,EAAWJ,GACtB,QACI,OAAOA,I,QExDbZ,EAAe,GCKNmB,4BAAgB,CAC3BC,aNIW,WAAuC,IAA9BR,EAA6B,uDAArBZ,EAAca,EAAO,uCACjD,OAAOA,EAAOK,MAEV,IIfiB,YJgBb,sBACON,EADP,CAEIX,MAAOY,EAAOQ,UAEtB,QACI,OAAOT,IMZfU,YAAaC,EACbC,aDNW,WAAyC,IAA/BZ,EAA8B,uDAAtBZ,EAAca,EAAQ,uCAC3CK,EAAkBL,EAAlBK,KAAMG,EAAYR,EAAZQ,QAEd,OAAQH,GACJ,IDFiB,YCGb,MAAM,GAAN,mBAAWN,GAAX,CAAkBS,IACtB,IDHoB,eCIhB,OAAOT,EAAMa,QAAO,SAACC,GAAD,OAAWA,EAAMC,KAAON,KAChD,QACI,OAAOT,ICFfgB,YLHW,WAAuC,IAA9BhB,EAA6B,uDAArBZ,EAAca,EAAO,uCAGjD,OAAOA,EAAOK,MACV,IGXgB,WHYZ,sBACON,EADP,CAEIV,KAAMW,EAAOQ,UAErB,QACI,OAAOT,MMXbiB,EAAa,CAACC,KAQLC,EANDC,sBACVC,EALiB,GAOjBC,8BAAoBC,kBAAe,WAAf,EAAmBN,K,gBCZ9BO,EAAY,CACrBC,UAAW,UAGFC,EAAW,CACpBC,MAAO,MACPC,OAAQ,O,iBCHG,SAASC,IACpB,OACI,yBAAKC,MAAON,GACR,kGAIA,yBAAKO,IAAKC,IAAMC,IAAI,eAAeH,MAAOJ,K,6BCPzCQ,EAAW,SACpBC,EACAC,GAFoB,IAGpBC,EAHoB,wDAIpBC,EAJoB,uDAIV,IAJU,OAKnB,SAACC,GACF,IAAIxB,EAEJ,GAAKsB,EAQE,CACH,IAAMG,EAAS,GACfC,OAAOC,KAAKP,GAAKQ,SAAQ,SAAUC,GAC/BT,EAAIS,GAAKD,SAAQ,SAACR,GACdpB,EAAK8B,cACLL,EAAOM,KAAK/B,GACZwB,EAAS,CACLjC,KNpBK,YMqBLG,QAAS,CAAE0B,MAAKC,YAAWrB,QAE/BgC,YAAW,WACPR,EAAS,CAAEjC,KNvBH,eMuBuBG,QAAS+B,EAAOQ,UAChDV,cAnBXvB,EAAK8B,cACLN,EAAS,CACLjC,KNRa,YMSbG,QAAS,CAAE0B,MAAKC,YAAWrB,QAG/BgC,YAAW,kBAAMR,EAAS,CAAEjC,KNXR,eMW4BG,QAASM,MAAOuB,KCR3DpC,EAAc,SAACR,EAAOI,GAC/B,MAAO,CACHQ,KPToB,eOUpBZ,MAAOA,EACPI,SAAUA,IAILK,EAAW,SAACR,GACrB,MAAO,CACHW,KPhBiB,YOiBjBX,MAAOA,IAIFsD,EAAS,WAGlB,OAFAC,aAAaC,WAAW,SACxBD,aAAaC,WAAW,kBACjB,CACH7C,KPxBmB,gBO4Bd8C,EAAmB,SAACC,GAC7B,OAAO,SAACd,GACJQ,YAAW,WAEPR,EAASU,OACO,IAAjBI,K,wBCqCX,IAMeC,cAAWC,YAAQ,MANP,SAAChB,GACxB,MAAO,CACHU,OAAQ,kBAAMV,EAASiB,SAILD,EA3E1B,SAAgBE,GACZ,IAAMC,EACF,yBAAKC,UAAU,OACX,yBAAK7B,MAAO,CAAE8B,UAAW,EAAGC,YAAa,GAAIC,MAAO,SAChD,qCAAWL,EAAM9C,KAAKb,WAE1B,yBAAK6D,UAAU,eACX,kBAAC,IAAD,CACIA,UAAU,wCACVI,GAAG,cAEH,4BAAQJ,UAAU,QAAlB,cAEJ,kBAAC,IAAD,CACIA,UAAU,wCACVK,QAASP,EAAMR,OACfc,GAAG,KAEH,4BAAQJ,UAAU,QAAlB,aAMVM,EACF,6BACI,kBAAC,IAAD,CAAMF,GAAG,SAASJ,UAAU,yCACxB,4BAAQA,UAAU,QAAlB,UAEJ,kBAAC,IAAD,CACII,GAAG,YACHJ,UAAU,yCAEV,4BAAQA,UAAU,QAAlB,cAKZ,OACI,6BACI,yBACIA,UAAU,8BACVO,KAAK,aACLC,aAAW,mBAEX,6BACI,kBAAC,IAAD,CAAMJ,GAAG,KACL,yBAAKhC,IAAKC,IAAM2B,UAAU,cAAc1B,IAAI,SAC5C,wBAAI0B,UAAU,eAAd,kBAIR,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,eACX,kBAAC,IAAD,CACII,GAAG,SACHJ,UAAU,yCAEV,wBAAIA,UAAU,QAAd,kBAKXF,EAAM9C,KAAKd,gBAAkB6D,EAAYO,Q,sEClE3C,oBACX,kBAAC,WAAD,KACI,yBACIlC,IAAKqC,IACLtC,MAAO,CAAEH,MAAO,QAAS0C,OAAQ,OAAQC,QAAS,SAClDrC,IAAI,iB,SC0DDsC,GAhEKC,YAAW,CAC3BC,KAAM,CACFC,SAAU,GAEdC,WAAY,CACRC,aAAc,GACdC,YAAa,GAEbC,aAAc,GAGdlD,OAAQ,IACRD,MAAO,IACPoD,UAAW,OACXC,WAAY,WAEhBC,cAAe,CACXC,YAAa,GACbvD,MAAO,OACPC,OAAQ,OAER,MAAO,CACHH,UAAW,SACXqC,MAAO,QACPF,UAAW,KAInBuB,aAAc,CAEVH,WAAY,QACZI,SAAU,IAEVzD,MAAO,OACPC,OAAQ,KAGZyD,SAAU,CACNL,WAAY,OACZvD,UAAW,SAEXmC,UAAW,GACXkB,aAAc,IAIlBQ,eAAgB,CACZJ,WAAY,GACZtB,UAAW,IAGf2B,iBAAkB,CACdL,WAAY,GACZtB,UAAW,IAGf4B,cAAc,CACVN,WAAY,GACZtB,UAAW,M,qEC1BJ6B,GAhCUjB,YAAW,CAGhCkB,cAAe,CACXV,WAAY,UACZI,SAAU,IACVzD,MAAO,OACPC,OAAQ,IACRiC,YAAa,GACb8B,UAAW,UAIfC,MAAO,CACHR,SAAU,IACVzD,MAAO,OACP,WAAc,QAIlBkE,MAAO,CACHC,KAAM,WACNrE,UAAW,UAGfsE,OAAQ,CACJpE,MAAO,IACPiC,UAAW,M,2BC1BNoC,GAAcC,cAAW,iBAAO,CACzCxB,KAAM,CACFyB,gBAAiB,OACjB,UAAW,CACPA,gBAAiBC,KAAK,UAJPF,CAOvBG,MC+NWC,GArNI,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEdC,EAAWC,aAAY,SAACxG,GAAD,OAAWA,EAAMgB,YAAY1B,QAChDI,EAAU8G,aAAY,SAACxG,GAAD,OAAWA,EAAMU,eAAvChB,MAEF6C,EAAWkE,cAkDjBC,qBAAU,WACN,GAAiB,OAAbJ,EAAmB,CACnB,IAAIK,EAASL,EAASM,OAClBC,EAAWP,EAASQ,iBAExB,IACIvE,EC7EO,SAACsE,EAAUF,GAAX,OAAsB,SAAApE,GAGzCwE,IAAMC,IAAN,sCAAyCH,EAAzC,YAAqDF,IACpDM,MAAK,SAAAC,GACF3E,EAAS,CACLjC,KdTY,WcUZG,QAASyG,EAAIC,UAElBC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,ODmEK7D,CAAgBqD,EAAUF,IACrC,MAAOhH,GACL2H,QAAQC,IAAI5H,OAGrB,CAAC2G,EAAU/D,IAEd,IAAMiF,EAAU/B,KAEhB,GAAiB,OAAba,EACA,OACI,kBAAC,WAAD,KACI,kBAACmB,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAYC,QAAQ,KAAK5G,GAAG,cAA5B,0BAMT,GAAgB,MAAZwF,EACP,OAAO,kBAACqB,EAAD,MACJ,GAAgB,MAAZrB,GAAsC,MAAlBA,EAASsB,MACpC,OACI,kBAAC,WAAD,KACI,6BACI,kBAACH,GAAA,EAAD,CACI/D,UAAW6D,EAAQ3B,MACnB8B,QAAQ,KACR5G,GAAG,cAHP,6DAQA,kBAAC0G,GAAA,EAAD,CAAgB9D,UAAW6D,EAAQM,eAC/B,kBAACC,GAAA,EAAD,CACIpE,UAAW6D,EAAQ9B,cACnBvB,aAAW,gBAEX,kBAAC6D,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,qBAGR,kBAACC,GAAA,EAAD,KACI,kBAACF,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWE,UAAU,MAEb7B,EAAS8B,cACJC,wBAWzC,IAAMC,EAA2BhC,EAASsB,MAAMW,MAAMC,QAChDC,EAAuBnC,EAASsB,MAAMc,MAAMF,QAElD,OACI,kBAAC,WAAD,KACI,kBAACG,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGpF,UAAW6D,EAAQ9B,eACzC,kBAAC+B,GAAA,EAAD,CAAgB9D,UAAW6D,EAAQ5B,OAC/B,kBAAC8B,GAAA,EAAD,CACI/D,UAAW6D,EAAQ3B,MACnB8B,QAAQ,KACR5G,GAAG,cAEFwF,EAAS8B,cAAcG,MAAMQ,QAC1B,OACAzC,EAAS8B,cAAcM,MAAMK,SAGrC,kBAACjB,GAAA,EAAD,CAAO5D,aAAW,gBACd,kBAAC6D,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,aACA,kBAACA,GAAA,EAAD,eACA,kBAACA,GAAA,EAAD,iBACA,kBAACA,GAAA,EAAD,iBAGR,kBAACC,GAAA,EAAD,KACI,kBAACF,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWE,UAAU,MAChB7B,EAAS8B,cAAcG,MAAMQ,SAElC,kBAACd,GAAA,EAAD,KACKK,EAAyBU,OACrBC,QAAQ,GAAGC,SACZ,KACAZ,EAAyBU,OACpBG,OAEb,kBAAClB,GAAA,EAAD,KACKK,EAAyBc,SACrBH,QAAQ,GAAGC,SACZ,KACAZ,EAAyBc,SACpBD,OAEb,kBAAClB,GAAA,EAAD,KACKK,EAAyBe,QACrBJ,QAAQ,GAAGC,SACZ,KACAZ,EAAyBe,QACpBF,QAGjB,kBAACnB,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWE,UAAU,MAChB7B,EAAS8B,cAAcM,MAAMK,SAElC,kBAACd,GAAA,EAAD,KACKQ,EAAqBO,OAAOC,QAAQ,GAChCC,SACD,KACAT,EAAqBO,OAAOG,OAEpC,kBAAClB,GAAA,EAAD,KACKQ,EAAqBW,SACjBH,QAAQ,GAAGC,SACZ,KACAT,EAAqBW,SAASD,OAEtC,kBAAClB,GAAA,EAAD,KACKQ,EAAqBY,QAAQJ,QAAQ,GACjCC,SACD,KACAT,EAAqBY,QAAQF,WAMrD,kBAAC,IAAD,CAAMrF,GAAG,UACL,kBAACiC,GAAD,CACIrC,UAAW6D,EAAQzB,OACnB/B,QAnMR,SAACuF,GAGb,GAFAA,EAAMC,iBAEF9J,EAAO,CACP,IAAIiH,EAASL,EAASM,OAClBC,EAAWP,EAASQ,iBAGpB2C,EAAe9C,EADCjH,EAAMgK,OAAO,GAGjC3C,IAAM4C,SAASC,QAAU,CACrBC,cAAc,SAAD,OAAWnK,IAG5BqH,IACK+C,KAAK,oCAAqC,CACvCjD,SAAUA,EACV4C,aAAcA,EACd9C,OAAQA,IAEXM,MAAK,WACF1E,EACIwH,EACI,2BACA,eAIX3C,OAAM,SAACC,GACAA,EAAI2C,SAAS7C,KAAKsC,cAClBlH,EACIwH,EACI,yCACA,mBAMpBxH,EACIwH,EACI,uCACA,aAuJI,uB,SExITE,I,OAlFQzF,YAAW,CAC9BC,KAAM,CACFC,SAAU,GAEdC,WAAY,CACRC,aAAc,GACdC,YAAa,GAEbC,aAAc,GAGdlD,OAAQ,IACRD,MAAO,IACPoD,UAAW,OACXC,WAAY,WAEhBC,cAAe,CACXC,YAAa,GACbvD,MAAO,OACPC,OAAQ,OAER,MAAO,CACHH,UAAW,SACXqC,MAAO,QACPF,UAAW,KAInBuB,aAAc,CAEVH,WAAY,QACZI,SAAU,IAEVzD,MAAO,OACPC,OAAQ,KAGZyD,SAAU,CACNL,WAAY,OACZvD,UAAW,SAEXmC,UAAW,GACXkB,aAAc,IAElBc,MAAO,CACHR,SAAU,IACVzD,MAAO,QAGXkE,MAAO,CACHC,KAAM,WACNrE,UAAW,UAGf6D,eAAgB,CACZJ,WAAY,IACZtB,UAAW,IAGf2B,iBAAkB,CACdL,WAAY,IACZtB,UAAW,IAGfsG,WAAY,CACRhE,gBAAiB,UACjBvE,MAAO,IACPwI,SAAU,QACV1I,UAAW,UAKf+D,cAAc,CACVN,WAAY,IACZtB,UAAW,GACXsC,gBAAiB,UCvEV,SAASkE,GAAT,GAAmD,IAA/BC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,YACxC9C,EAAUyC,KAEhB,OACI,6BACI,kBAACrB,EAAA,EAAD,KACI,6BACI,kBAAC,KAAD,CACI2B,SAAUF,EACVjB,MAAOiB,EACPG,SAAU,SAACC,GACPH,EAAYG,IAEhBC,QAAS,IAAIC,KAAK,KAAM,GAAI,GAC5BC,QAAS,IAAID,KAAK,KAAM,EAAG,IAC3BhH,UAAW6D,EAAQ0C,gBCtBpC,SAASW,GAAUC,GAAkE,IAArDC,EAAoD,uDAAxC,GAAIC,EAAoC,gHACrE,MAAdF,IACAA,EAAa,IAAIH,MAIrB,IAAIM,EAAMH,EAAWI,UACjBC,EAAQL,EAAWM,WAAa,EAChCC,EAAOP,EAAWQ,cAEtB,OAAIN,EACM,GAAN,OAAUG,EAAQ,GAAR,WAAiBA,GAAjB,UAA8BA,IAAxC,OAAkDJ,GAAlD,OACIE,EAAM,GAAN,WAAeA,GAAf,UAA0BA,IAD9B,OAEGF,GAFH,OAEeM,GAGb,GAAN,OAAUA,GAAV,OAAiBN,GAAjB,OACII,EAAQ,GAAR,WAAiBA,GAAjB,UAA8BA,IADlC,OAEGJ,GAFH,OAEeE,EAAM,GAAN,WAAeA,GAAf,UAA0BA,ICXtC,ICgGQM,GAzFD,WACV,IAAMC,EAAYhF,aAAY,SAACxG,GAAD,OAAWA,EAAMQ,aAAanB,SACtDkD,EAAWkE,cAFD,EAKgBgF,mBAAS,MALzB,mBAKTnF,EALS,KAKCoF,EALD,OAMgBD,mBAAS,IAAId,KAAK,KAAM,EAAG,KAN3C,mBAMT9D,EANS,KAMC8E,EAND,KAOVnE,EAAUjD,KAYhB,GAVAmC,qBAAU,WACN,IAAM+D,EAAOI,GAAUhE,GACvB,IACItE,EDnBY,SAACkI,GAAD,OAAU,SAAAlI,GAG9BwE,IAAMC,IAAN,sCAAyCyD,IACxCxD,MAAK,SAAAC,GAEF3E,EAAS,CACLjC,KlBda,YkBebG,QAASyG,EAAIC,UAElBC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OCSX7D,CAAA,UAAoBiH,KAC/B,MAAO9K,GACL2H,QAAQC,IAAI5H,MAEjB,CAACkH,EAAUtE,IAGG,MAAbiJ,EACA,OACI,6BACI,kBAAC5D,EAAD,OAKR,IAAMvI,EAAQmM,EAAUnM,MAExB,OACI,kBAACuJ,EAAA,EAAD,CACIgD,WAAS,EACTC,UAAU,MACVC,WAAW,aACXC,QAAS,EACTpI,UAAW6D,EAAQ/C,MAEnB,kBAACmE,EAAA,EAAD,CAAMjF,UAAW6D,EAAQlC,eAAgBuD,MAAI,EAACC,GAAI,GAC9C,4CACA,kBAAC,GAAD,CACIuB,cAAe,IAAIM,KACnBL,YAAaqB,KAIrB,kBAAC/C,EAAA,EAAD,CAAMjF,UAAW6D,EAAQjC,iBAAkBsD,MAAI,EAACC,GAAI,GAChD,wCAAc+B,GAAUhE,EAAU,KAAK,GAAvC,KACA,kBAACmF,EAAA,EAAD,CAAOrI,UAAW6D,EAAQ7C,YACtB,kBAAC,WAAD,KACI,kBAACsH,EAAA,EAAD,KACK5M,EAAM6M,KAAI,SAAC5M,GACR,OACI,kBAAC+F,EAAA,EAAD,CACIzC,IAAKtD,EAAKsH,OACVb,QAAM,EACNpC,UAAW6D,EAAQnC,SACnBrB,QAAS,WACL0H,EAAYpM,KAGhB,kBAAC6M,EAAA,EAAD,CACIC,QACI9M,EAAKkJ,MAAMQ,QACX,OACA1J,EAAKqJ,MAAMK,kBAU/C,kBAACJ,EAAA,EAAD,CACIgD,WAAS,EACT/C,MAAI,EACJC,GAAI,EACJiD,QAAS,EACTpI,UAAW6D,EAAQhC,eAEnB,0CACA,kBAAC,GAAD,CAAYc,SAAUA,O,yDCI3B/C,gBAZS,SAACvD,GACrB,MAAO,CACHW,KAAMX,EAAMU,gBAIO,SAAC6B,GACxB,MAAO,CACH8J,YAAa,SAACvM,EAAUwM,GAAX,OACT/J,EbvDa,SAACzC,EAAUwM,GAChC,OAAO,SAAC/J,GACJA,EAvCG,CACHjC,KPJkB,eO4ClByG,IACK+C,KAAK,yCAA0C,CAC5ChK,SAAUA,EACVwM,SAAUA,IAEbrF,MAAK,SAACC,GACH,IAAMxH,EAAQwH,EAAIC,KAAKvE,IAEjB2J,EAAiB,IAAI5B,MACvB,IAAIA,MAAO6B,UAAY,MAI3BtJ,aAAauJ,QAAQ,QAAS/M,GAC9BwD,aAAauJ,QAAQ,WAAY3M,GACjCoD,aAAauJ,QAAQ,iBAAkBF,GACvChK,EAASrC,EAAYR,EAAOI,IAC5ByC,EAASa,EAAiB,UAE7BgE,OAAM,SAACzH,GACJ,IAAM+M,EAAe/M,EAAMqK,SAAS7C,KAAKwF,iBAAiB,GAC1DpK,EAASpC,EAASuM,IAClBnK,EAASL,EAASwK,EAAc,ea6B3BlJ,CAAkB1D,EAAUwM,QAGlC/I,EA5FD,SAACE,GAAU,MAEWgI,mBAAS,CACrC3L,SAAU,GACVwM,SAAU,KAJO,mBAEdM,EAFc,KAEJC,EAFI,KAOb/M,EAAuB8M,EAAvB9M,SAAUwM,EAAaM,EAAbN,SAEZ9B,EAAW,SAACsC,GACdD,EAAY,eAAKD,EAAN,gBAAiBE,EAAEC,OAAOC,KAAOF,EAAEC,OAAO3D,UAGnD6D,EAAQ,yCAAG,WAAOH,GAAP,UAAAI,EAAA,sDACbJ,EAAEtD,iBACF/F,EAAM4I,YAAYvM,EAAUwM,GAFf,2CAAH,sDAMVI,EAAe,KAMnB,OALIjJ,EAAM9D,QACN+M,EAAe,2BAAIjJ,EAAM9D,MAAMwN,UAI/B1J,EAAM9C,KAAKd,gBACJ,kBAAC,IAAD,CAAUkE,GAAG,eAGpB,6BACK2I,EACAjJ,EAAM7D,QACH,kBAAC,KAAD,MAEA,yBAAK+D,UAAU,QACX,0BAAMsJ,SAAU,SAACH,GAAD,OAAOG,EAASH,KAC5B,yBAAKnJ,UAAU,cACX,4CACA,2BACIrD,KAAK,OACLqD,UAAU,eACVyJ,YAAY,iBACZJ,KAAK,WACLxC,SAAU,SAACsC,GAAD,OAAOtC,EAASsC,OAGlC,yBAAKnJ,UAAU,cACX,2CACA,2BACIrD,KAAK,WACLqD,UAAU,eACVyJ,YAAY,WACZJ,KAAK,WACLxC,SAAU,SAACsC,GAAD,OAAOtC,EAASsC,OAGlC,4BACIxM,KAAK,SACLqD,UAAU,qCAFd,SAMA,6BACI,2BAAOA,UAAU,mCAAjB,oBAGA,kBAAC,IAAD,CACIA,UAAU,uCACVI,GAAG,aAFP,kBC6DbR,gBAZS,SAACvD,GACrB,MAAO,CACHW,KAAMX,EAAMU,gBAIO,SAAC6B,GACxB,MAAO,CACH8K,aAAc,SAACvN,EAAUwN,EAAOC,EAAWC,GAA7B,OACVjL,Ed1Dc,SAACzC,EAAUwN,EAAOC,EAAWC,GACnD,OAAO,SAACjL,GACJA,EAvEG,CACHjC,KPJkB,eO2ElByG,IACK+C,KAAK,gDAAiD,CACnDhK,SAAUA,EACVwN,MAAOA,EACPC,UAAWA,EACXC,UAAWA,IAEdvG,MAAK,SAACC,GACH,IAAMxH,EAAQwH,EAAIC,KAAKvE,IAEjB2J,EAAiB,IAAI5B,MACvB,IAAIA,MAAO6B,UAAY,MAK3BtJ,aAAauJ,QAAQ,WAAY3M,GACjCoD,aAAauJ,QAAQ,QAAS/M,GAC9BwD,aAAauJ,QAAQ,iBAAkBF,GACvChK,EAASrC,EAAYR,EAAOI,IAC5ByC,EAASa,EAAiB,UAE7BgE,OAAM,SAACzH,GACJ4C,EAASpC,EAASR,IAClB,IAAM8N,EAAgB9N,EAAMqK,SAAS7C,KAErC5E,EAASL,EAASuL,EAAe,UAAU,Qc6BtCjK,CAAmB1D,EAAUwN,EAAOC,EAAWC,QAGrDjK,EAjIE,SAACE,GAAU,MAEQgI,mBAAS,CACrC3L,SAAU,GACVwN,MAAO,GACPC,UAAW,GACXC,UAAW,KANS,mBAEjBZ,EAFiB,KAEPC,EAFO,KAShB/M,EAA0C8M,EAA1C9M,SAAUwN,EAAgCV,EAAhCU,MAAOC,EAAyBX,EAAzBW,UAAWC,EAAcZ,EAAdY,UAE9BhD,EAAW,SAACsC,GACdD,EAAY,eAAKD,EAAN,gBAAiBE,EAAEC,OAAOC,KAAOF,EAAEC,OAAO3D,UAGnD6D,EAAQ,yCAAG,WAAOH,GAAP,UAAAI,EAAA,sDACbJ,EAAEtD,iBAEF/F,EAAM4J,aAAavN,EAAUwN,EAAOC,EAAWC,GAG3C/J,EAAM9C,KAAKd,iBACXgN,EAAY,CACR/M,SAAU,GACVwN,MAAO,GACPC,UAAW,GACXC,UAAW,KAXN,2CAAH,sDAgBVd,EAAe,KAMnB,OALIjJ,EAAM9D,QACN+M,EAAe,2BAAIjJ,EAAM9D,MAAMwN,UAI/B1J,EAAM9C,KAAKd,gBACJ,kBAAC,IAAD,CAAUkE,GAAG,MAGpB,6BACK2I,EACAjJ,EAAM7D,QACH,kBAACgI,EAAD,MAEA,yBAAKjE,UAAU,QACX,0BAAMsJ,SAAU,SAACH,GAAD,OAAOG,EAASH,KAC5B,yBAAKnJ,UAAU,cACX,wCACA,2BACIrD,KAAK,QACLqD,UAAU,eACVyJ,YAAY,cACZJ,KAAK,QACLxC,SAAU,SAACsC,GAAD,OAAOtC,EAASsC,IAC1B1D,MAAOkE,KAGf,yBAAK3J,UAAU,cACX,4CACA,2BACIrD,KAAK,OACLqD,UAAU,eACVyJ,YAAY,YACZJ,KAAK,WACLxC,SAAU,SAACsC,GAAD,OAAOtC,EAASsC,IAC1B1D,MAAOtJ,KAGf,yBAAK6D,UAAU,cACX,2CACA,2BACIrD,KAAK,WACLqD,UAAU,eACVyJ,YAAY,WACZJ,KAAK,YACLxC,SAAU,SAACsC,GAAD,OAAOtC,EAASsC,IAC1B1D,MAAOmE,KAGf,yBAAK5J,UAAU,cACX,2CACA,2BACIrD,KAAK,WACLqD,UAAU,eACVyJ,YAAY,mBACZJ,KAAK,YACLxC,SAAU,SAACsC,GAAD,OAAOtC,EAASsC,IAC1B1D,MAAOoE,KAIf,4BACIlN,KAAK,SACLqD,UAAU,wCAFd,YAOA,6BACI,2BAAOA,UAAU,mCAAjB,4BAGA,kBAAC,IAAD,CACIA,UAAU,sCACVI,GAAG,UAFP,gBC5Gb,SAAS2J,KACpB,OACI,6BACI,wDACA,qECuBGC,OAzBf,SAAuBlK,GAEnB,IAAMmK,EAAYnK,EAAM2E,UAFE,EAGS5B,aAAY,SAACxG,GAAD,OAAWA,EAAMU,eAAzDb,EAHmB,EAGnBA,gBAAiBD,EAHE,EAGFA,QAMxB,OACI,kBAAC,IAAD,CACAiO,OAAQ,SAAApK,GAAK,OACJ5D,GAAoBD,EAGjB,kBAACgO,EAAcnK,GAFf,kBAAC,IAAD,CAAUM,GAAG,eCiBlB0B,GAhCUjB,YAAW,CAGhCkB,cAAe,CACXV,WAAY,UACZI,SAAU,IACVzD,MAAO,OACPC,OAAQ,IACRiC,YAAa,GACb8B,UAAW,UAIfC,MAAO,CACHR,SAAU,IACVzD,MAAO,OACP,WAAc,QAIlBkE,MAAO,CACHC,KAAM,WACNrE,UAAW,UAGfsE,OAAQ,CACJpE,MAAO,IACPiC,UAAW,MCuHJkK,GAnIa,SAACrK,GAAW,IAAD,EACHgI,mBAAS,MADN,mBAC5BnF,EAD4B,KAClBoF,EADkB,KA+BnChF,qBAAU,WA1BG,IAACG,EAAUF,EAAVE,EA2BLpD,EAAMoD,SA3BSF,EA2BClD,EAAMkD,OA1B3BI,IACKC,IADL,sCACwCH,EADxC,YACoDF,IAC/CM,MAAK,SAACC,GACHwE,EAAYxE,EAAIC,SAEnBC,OAAM,SAACC,GACJC,QAAQC,IAAIF,QAqBrB,CAAC5D,EAAMoD,SAAUpD,EAAMkD,SAC1B,IAAMa,EAAU/B,KAEhB,GAAiB,OAAba,EACA,OAAO,kBAACsB,EAAD,MAEP,IAAMW,EAA2BjC,EAASuB,MAAMW,MAAMC,QAChDC,EAAuBpC,EAASuB,MAAMc,MAAMF,QAElD,OACI,kBAAC,WAAD,KACI,kBAACG,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGpF,UAAW6D,EAAQ9B,eACzC,kBAAC+B,GAAA,EAAD,CAAgB9D,UAAW6D,EAAQ5B,OAC/B,kBAAC8B,GAAA,EAAD,CACI/D,UAAW6D,EAAQ3B,MACnB8B,QAAQ,KACR5G,GAAG,cAEFuF,EAAS+B,cAAcG,MAAMQ,QAC1B,OACA1C,EAAS+B,cAAcM,MAAMK,SAGrC,kBAACjB,GAAA,EAAD,CAAO5D,aAAW,gBACd,kBAAC6D,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,aACA,kBAACA,GAAA,EAAD,eACA,kBAACA,GAAA,EAAD,iBACA,kBAACA,GAAA,EAAD,iBAGR,kBAACC,GAAA,EAAD,KACI,kBAACF,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWE,UAAU,MAChB9B,EAAS+B,cAAcG,MAAMQ,SAElC,kBAACd,GAAA,EAAD,KACKK,EAAyBU,OACrBC,QAAQ,GAAGC,SACZ,KACAZ,EAAyBU,OACpBG,OAEb,kBAAClB,GAAA,EAAD,KACKK,EAAyBc,SACrBH,QAAQ,GAAGC,SACZ,KACAZ,EAAyBc,SACpBD,OAEb,kBAAClB,GAAA,EAAD,KACKK,EAAyBe,QACrBJ,QAAQ,GAAGC,SACZ,KACAZ,EAAyBe,QACpBF,QAGjB,kBAACnB,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWE,UAAU,MAChB9B,EAAS+B,cAAcM,MAAMK,SAElC,kBAACd,GAAA,EAAD,KACKQ,EAAqBO,OAAOC,QAAQ,GAChCC,SACD,KACAT,EAAqBO,OAAOG,OAEpC,kBAAClB,GAAA,EAAD,KACKQ,EAAqBW,SACjBH,QAAQ,GAAGC,SACZ,KACAT,EAAqBW,SAASD,OAEtC,kBAAClB,GAAA,EAAD,KACKQ,EAAqBY,QAAQJ,QAAQ,GACjCC,SACD,KACAT,EAAqBY,QAAQF,WAMrD,4BACItH,MAAO,CAAE8B,UAAW,IACpBD,UAAU,iBACVK,QAzGA,WAChB,IAAItE,EAAQwD,aAAa6K,QAAQ,SACjChH,IAAM4C,SAASC,QAAU,CACrBC,cAAc,SAAD,OAAWnK,IAE5BqH,IACKiH,OADL,oCACyCvK,EAAM1C,GAD/C,YAEKkG,MAAK,WACFgH,OAAOC,SAAW,gBAErB9G,OAAM,SAACC,GACJC,QAAQC,IAAI,8BAA+BF,QA2FvC,kBCnDL8G,GA9EG,WAAO,IAAD,EACc1C,mBAAS,MADvB,mBACb2C,EADa,KACFC,EADE,KAIZ3O,EAAU8G,aAAY,SAACxG,GAAD,OAAWA,EAAMU,eAAvChB,MAoBR,OAlBAgH,qBAAU,WACFhH,IACAqH,IAAM4C,SAASC,QAAU,CACrBC,cAAc,SAAD,OAAWnK,IAG5BqH,IACKC,IADL,8BAEKC,MAAK,SAACC,GAEHmH,EAAanH,EAAIC,SAEpBC,OAAM,SAACC,GACJC,QAAQC,IAAI,uBAAwBF,SAGjD,CAAC3H,IAEc,OAAd0O,EACO,kBAACxG,EAAD,MACqB,IAArBwG,EAAUE,OAEb,6BACI,wBACIxM,MAAO,CACHL,UAAW,SACXmC,UAAW,GACXkB,aAAc,KAJtB,cAUA,yBACIhD,MAAO,CACHL,UAAW,SACXsD,UAAW,OACXnD,OAAQ,MAGXwM,EAAUlC,KAAI,SAAC5M,GACZ,OACI,yBACIsD,IAAKtD,EAAKyB,GACVe,MAAO,CACH8B,UAAW,GACXsB,WAAY,IACZrB,YAAa,OACblC,MAAO,MACP4M,QAAS,SAGb,kBAACC,GAAD,CACIzN,GAAIzB,EAAKyB,GACT8F,SAAUvH,EAAKuH,SACfF,OAAQrH,EAAKqH,eAUrC,wBAAI7E,MAAO,CAAE2M,QAAS,OAAQhN,UAAW,WAAzC,uCCnDG8B,gBALS,SAACvD,GACrB,MAAO,CACH0O,OAAQ1O,EAAMY,gBAGP2C,EAtBD,SAAC,GAAD,IAAGmL,EAAH,EAAGA,OAAH,OACC,OAAXA,GACAA,EAAOJ,OAAS,GAChBI,EAAOxC,KAAI,SAACpL,GAAD,OACP,yBACI8B,IAAK9B,EAAMC,GACXe,MAAO,CAAEL,UAAW,UACpBkC,UAAS,sBAAiB7C,EAAMsB,YAE/BtB,EAAMqB,W,OCqCnB,IAceoB,gBAdS,SAACvD,GACrB,MAAO,CACHH,gBAA6C,OAA5BG,EAAMU,YAAYhB,MACnCI,SAAUE,EAAMU,YAAYZ,SAC5BJ,MAAOM,EAAMU,YAAYhB,UAIN,SAAC6C,GACxB,MAAO,CACHoM,gBAAiB,kBAAMpM,GrBkDpB,SAACA,GACJ,IAAM7C,EAAQwD,aAAa6K,QAAQ,SAC7BjO,EAAWoD,aAAa6K,QAAQ,YACtC,QAAca,IAAVlP,EACA6C,EAASU,SACN,CACH,IAAMsJ,EAAiB,IAAI5B,KACvBzH,aAAa6K,QAAQ,mBAErBxB,GAAkB,IAAI5B,KACtBpI,EAASU,MAETV,EAASrC,EAAYR,EAAOI,IAC5ByC,EACIa,GACKmJ,EAAeC,WAAY,IAAI7B,MAAO6B,WAAa,eqB7D7DjJ,EA9Cf,SAAaE,GAKT,OAJAiD,qBAAU,WACNjD,EAAMkL,qBAIN,kBAAC,IAAD,KACI,kBAAC,WAAD,KACI,kBAAC,EAAD,CAAQhO,KAAM8C,IACd,yBAAKE,UAAU,OACX,6BACI,kBAAC,GAAD,OAEJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOkL,OAAK,EAACC,KAAK,IAAI1G,UAAWvG,IACjC,kBAAC,IAAD,CAAOgN,OAAK,EAACC,KAAK,SAAS1G,UAAW2G,KACtC,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,SAAS1G,UAAW4G,KACtC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,YAAY1G,UAAW6G,KACzC,kBAAC,GAAD,CACIJ,OAAK,EACLC,KAAK,aACL1G,UAAW+F,GACXxN,KAAM8C,IAEV,kBAAC,IAAD,CAAO2E,UAAWsF,Y,OC9BtBwB,QACW,cAA7BjB,OAAOC,SAASiB,UAEe,UAA7BlB,OAAOC,SAASiB,UAEhBlB,OAAOC,SAASiB,SAASC,MACvB,2DCTN,IAAMC,GACF,kBAAC,IAAD,CAAUlO,MAAOA,GACb,kBAAC,GAAD,OAIRmO,IAASzB,OAAOwB,GAAKE,SAASC,eAAe,SDoHvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1I,MAAK,SAAA2I,GACJA,EAAaC,gBAEdzI,OAAM,SAAAzH,GACL2H,QAAQ3H,MAAMA,EAAMwN,a,mBEzI5B2C,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,qC","file":"static/js/main.9e78c632.chunk.js","sourcesContent":["import {GET_GAMES} from '../actions/types'\r\n\r\n\r\n// function that takes in an action\r\n// and send down certain state \r\n// depending on action\r\n\r\nconst initialState = {\r\n    games: null // what we're fetching from backend\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        \r\n        case GET_GAMES:\r\n            return{\r\n                ...state,                 \r\n                games: action.payload\r\n            }      \r\n        default:\r\n            return state\r\n    }\r\n}","import {GET_GAME} from '../actions/types'\r\n\r\n\r\nconst initialState = {\r\n    game: null\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n\r\n    \r\n    switch(action.type){\r\n        case GET_GAME:\r\n            return{\r\n                ...state,\r\n                game: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","export const updateObject = (oldObject, updatedProperties) => {\r\n    return{\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n}","import * as actionTypes from '../actions/types'\r\nimport {updateObject} from '../utility'\r\n\r\nconst initialState ={\r\n    token: null,\r\n    error: null,\r\n    loading: true,\r\n    isAuthenticated: null,\r\n    username: null\r\n}\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, {\r\n        error: null,\r\n        loading: true\r\n    })\r\n}\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        token: action.token,\r\n        error: null,\r\n        loading: false,\r\n        isAuthenticated: true,\r\n        username: action.username\r\n    })\r\n}\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject(state, {\r\n        error: action.error,\r\n        loading: false,\r\n        isAuthenticated: false\r\n    })\r\n}\r\n\r\nconst authLogout = (state, action) =>{\r\n    return updateObject(state, {\r\n        token: null,\r\n        loading: false,\r\n        isAuthenticated: false,\r\n        username: null\r\n    })\r\n}\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    \r\n    \r\n    switch(action.type){\r\n        case actionTypes.AUTH_START:\r\n            return authStart(state, action)\r\n        case actionTypes.AUTH_SUCCESS:\r\n            return authSuccess(state, action)\r\n        case actionTypes.AUTH_FAIL:\r\n            return authFail(state, action)\r\n        case actionTypes.AUTH_LOGOUT:\r\n            return authLogout(state, action)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer","export const GET_GAMES = \"GET_GAMES\"\r\nexport const GET_GAME = \"GET_GAME\"\r\nexport const AUTH_START = 'AUTH_START'\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\r\nexport const AUTH_FAIL = 'AUTH_FAIL'\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\r\nexport const SET_ALERT = 'SET_ALERT'\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT'\r\n\r\n\r\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types'\r\n\r\nconst initialState = []\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action\r\n\r\n    switch (type) {\r\n        case SET_ALERT:\r\n            return [...state, payload]\r\n        case REMOVE_ALERT:\r\n            return state.filter((alert) => alert.id !== payload)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","// meeting place for all other reducers\r\nimport { combineReducers } from 'redux'\r\nimport games from './games'\r\nimport game from './game'\r\nimport auth from './auth'\r\nimport alert from './alert'\r\n\r\nexport default combineReducers({\r\n    gamesReducer: games, // for games\r\n    authReducer: auth, // for authentication\r\n    alertReducer: alert, // for alerts\r\n    gameReducer: game, // for individual game info\r\n})\r\n","import {createStore, applyMiddleware } from 'redux'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store","export const bodyStyle = {\r\n    textAlign: 'center',\r\n}\r\n\r\nexport const imgStyle = {\r\n    width: '70%',\r\n    height: '50%',\r\n}\r\n","import React from 'react'\r\nimport { bodyStyle, imgStyle } from './homeStyles'\r\nimport logo from './demo.gif'\r\nexport default function Home() {\r\n    return (\r\n        <div style={bodyStyle}>\r\n            <h2>\r\n                Track the stat leaders for any game! Click on track games to\r\n                begin\r\n            </h2>\r\n            <img src={logo} alt=\"Project Demo\" style={imgStyle} />\r\n        </div>\r\n    )\r\n}\r\n","import { v4 as uuid } from 'uuid'\r\nimport { SET_ALERT, REMOVE_ALERT } from './types'\r\n\r\nexport const setAlert = (\r\n    msg,\r\n    alertType,\r\n    registrationError = false,\r\n    timeout = 5000\r\n) => (dispatch) => {\r\n    var id\r\n\r\n    if (!registrationError) {\r\n        id = uuid()\r\n        dispatch({\r\n            type: SET_ALERT,\r\n            payload: { msg, alertType, id },\r\n        })\r\n\r\n        setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout)\r\n    } else {\r\n        const idList = []\r\n        Object.keys(msg).forEach(function (key) {\r\n            msg[key].forEach((msg) => {\r\n                id = uuid()\r\n                idList.push(id)\r\n                dispatch({\r\n                    type: SET_ALERT,\r\n                    payload: { msg, alertType, id },\r\n                })\r\n                setTimeout(() => {\r\n                    dispatch({ type: REMOVE_ALERT, payload: idList.pop() })\r\n                }, timeout)\r\n            })\r\n        })\r\n    }\r\n}\r\n","import * as actionTypes from './types'\r\nimport axios from 'axios'\r\nimport { setAlert } from './alert'\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START,\r\n    }\r\n}\r\n\r\nexport const authSuccess = (token, username) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        token: token,\r\n        username: username,\r\n    }\r\n}\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error,\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('expirationDate')\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT,\r\n    }\r\n}\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return (dispatch) => {\r\n        setTimeout(() => {\r\n            // once time has arrived\r\n            dispatch(logout())\r\n        }, expirationTime * 1000)\r\n    }\r\n}\r\n\r\nexport const authLogin = (username, password) => {\r\n    return (dispatch) => {\r\n        dispatch(authStart())\r\n\r\n        axios\r\n            .post('http://localhost:8000/rest-auth/login/', {\r\n                username: username,\r\n                password: password,\r\n            })\r\n            .then((res) => {\r\n                const token = res.data.key\r\n\r\n                const expirationDate = new Date(\r\n                    new Date().getTime() + 3600 * 1000\r\n                )\r\n\r\n                // store in local storage\r\n                localStorage.setItem('token', token)\r\n                localStorage.setItem('username', username)\r\n                localStorage.setItem('expirationDate', expirationDate)\r\n                dispatch(authSuccess(token, username))\r\n                dispatch(checkAuthTimeout(3600))\r\n            })\r\n            .catch((error) => {\r\n                const errorMessage = error.response.data.non_field_errors[0]\r\n                dispatch(authFail(errorMessage))\r\n                dispatch(setAlert(errorMessage, 'danger'))\r\n                // console.log(error.response.data.non_field_errors[0])\r\n            })\r\n    }\r\n}\r\n\r\nexport const authSignup = (username, email, password1, password2) => {\r\n    return (dispatch) => {\r\n        dispatch(authStart())\r\n        axios\r\n            .post('http://127.0.0.1:8000/rest-auth/registration/', {\r\n                username: username,\r\n                email: email,\r\n                password1: password1,\r\n                password2: password2,\r\n            })\r\n            .then((res) => {\r\n                const token = res.data.key\r\n\r\n                const expirationDate = new Date(\r\n                    new Date().getTime() + 3600 * 1000\r\n                )\r\n\r\n                // store in local storage\r\n\r\n                localStorage.setItem('username', username)\r\n                localStorage.setItem('token', token)\r\n                localStorage.setItem('expirationDate', expirationDate)\r\n                dispatch(authSuccess(token, username))\r\n                dispatch(checkAuthTimeout(3600))\r\n            })\r\n            .catch((error) => {\r\n                dispatch(authFail(error))\r\n                const errorMessages = error.response.data\r\n                // dispatch(authFail(errorMessage))\r\n                dispatch(setAlert(errorMessages, 'danger', true))\r\n                // console.log(error.response.data)\r\n            })\r\n    }\r\n}\r\n\r\nexport const authCheckState = () => {\r\n    return (dispatch) => {\r\n        const token = localStorage.getItem('token')\r\n        const username = localStorage.getItem('username')\r\n        if (token === undefined) {\r\n            dispatch(logout())\r\n        } else {\r\n            const expirationDate = new Date(\r\n                localStorage.getItem('expirationDate')\r\n            )\r\n            if (expirationDate <= new Date()) {\r\n                dispatch(logout())\r\n            } else {\r\n                dispatch(authSuccess(token, username))\r\n                dispatch(\r\n                    checkAuthTimeout(\r\n                        (expirationDate.getTime() - new Date().getTime()) / 1000\r\n                    )\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport * as actions from '../../../store/actions/auth'\r\nimport { connect } from 'react-redux'\r\nimport logo from './trackerlogo.png'\r\nimport './header.css'\r\nfunction Header(props) {\r\n    const authLinks = (\r\n        <div className=\"row\">\r\n            <div style={{ marginTop: 5, marginRight: 15, color: 'pink' }}>\r\n                <h5>Hello {props.auth.username}</h5>\r\n            </div>\r\n            <div className=\"navbar-item\">\r\n                <Link\r\n                    className=\"btn btn-md btn-outline-secondary mx-2\"\r\n                    to=\"/dashboard\"\r\n                >\r\n                    <strong className=\"text\">Dashboard</strong>\r\n                </Link>\r\n                <Link\r\n                    className=\"btn btn-md btn-outline-secondary mx-2\"\r\n                    onClick={props.logout}\r\n                    to=\"/\"\r\n                >\r\n                    <strong className=\"text\">Logout</strong>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const guestLinks = (\r\n        <div>\r\n            <Link to=\"/login\" className=\"btn btn-md btn-outline-secondary mx-2\">\r\n                <strong className=\"text\">Login</strong>\r\n            </Link>\r\n            <Link\r\n                to=\"/register\"\r\n                className=\"btn btn-md btn-outline-secondary mx-2\"\r\n            >\r\n                <strong className=\"text\">Register</strong>\r\n            </Link>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <nav\r\n                className=\"navbar navbar-light bg-dark\"\r\n                role=\"navigation\"\r\n                aria-label=\"main navigation\"\r\n            >\r\n                <div>\r\n                    <Link to=\"/\">\r\n                        <img src={logo} className=\"header-logo\" alt=\"logo\" />\r\n                        <h5 className=\"header-text\">Game Tracker</h5>\r\n                    </Link>\r\n                </div>\r\n\r\n                <div className=\"mr-auto ml-auto\">\r\n                    <div className=\"navbar-item\">\r\n                        <Link\r\n                            to=\"/track\"\r\n                            className=\"btn btn-md btn-outline-secondary mx-2\"\r\n                        >\r\n                            <h5 className=\"text\">Track Games</h5>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n                {props.auth.isAuthenticated ? authLinks : guestLinks}\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        logout: () => dispatch(actions.logout()),\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(Header))\r\n","import React, { Fragment } from 'react'\r\nimport spinner from './spinner.gif'\r\n\r\nexport default () => (\r\n    <Fragment>\r\n        <img\r\n            src={spinner}\r\n            style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n            alt=\"Loading...\"\r\n        />\r\n    </Fragment>\r\n)\r\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst GamesStyles = makeStyles({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    gamesPaper: {\r\n        paddingRight: 50,\r\n        paddingLeft: 50,\r\n        \r\n        marginBottom: 30,\r\n        \r\n        \r\n        height: 500,\r\n        width: 300,\r\n        overflowY: 'auto',\r\n        background: '#343a40',\r\n    },\r\n    showGamesItem: {\r\n        marginLeft: -50,\r\n        width: 'auto',\r\n        height: 'auto',\r\n\r\n        '& p': {\r\n            textAlign: 'center',\r\n            color: 'black',\r\n            marginTop: 30,\r\n        },\r\n    },\r\n\r\n    gameInfoItem: {\r\n       \r\n        background: 'white',\r\n        minWidth: 300,\r\n        \r\n        width: 'auto',\r\n        height: 300,\r\n    },\r\n\r\n    ListItem: {\r\n        background: 'pink',\r\n        textAlign: 'center',\r\n\r\n        marginTop: 30,\r\n        marginBottom: 30,\r\n    },\r\n\r\n\r\n    datePickerGrid: {\r\n        marginLeft: 70,\r\n        marginTop: 50    \r\n    },\r\n\r\n    gamesDisplayGrid: {\r\n        marginLeft: 40,\r\n        marginTop: 50\r\n    },\r\n\r\n    gameTableGrid:{\r\n        marginLeft: 70,\r\n        marginTop: 50,   \r\n    }\r\n\r\n    \r\n})\r\n\r\nexport default GamesStyles\r\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst GamesTableStyles = makeStyles({\r\n    \r\n\r\n    gameInfotable: {       \r\n        background: '#343a40',\r\n        minWidth: 600,        \r\n        width: 'auto',\r\n        height: 300,\r\n        marginRight: 30,\r\n        overflowX: 'scroll'\r\n    },\r\n\r\n    \r\n    table: {\r\n        minWidth: 500,      \r\n        width: 'auto',\r\n        'background': 'pink',\r\n        \r\n    },\r\n\r\n    title: {\r\n        flex: '1 1 100%',\r\n        textAlign: 'center',\r\n    },\r\n\r\n    button: {\r\n        width: 200,\r\n        marginTop: 20\r\n    }\r\n    \r\n})\r\n\r\nexport default GamesTableStyles\r\n","import { withStyles } from '@material-ui/core/styles'\r\nimport { Button } from '@material-ui/core'\r\nimport { pink } from '@material-ui/core/colors'\r\nexport const ColorButton = withStyles(() => ({\r\n    root: {\r\n        backgroundColor: 'pink',\r\n        '&:hover': {\r\n            backgroundColor: pink[700],\r\n        },\r\n    },\r\n}))(Button)\r\n","import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { Grid } from '@material-ui/core'\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n} from '@material-ui/core'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport GamesTableStyles from './GamesTableStyles'\r\nimport Spinner from '../../Spinner'\r\nimport { ColorButton } from './ColorButton'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport * as actions from '../../../store/actions/game'\r\nimport * as alert_action from '../../../store/actions/alert'\r\n\r\nconst GamesTable = ({ gameData }) => {\r\n    // need a isLoading variable in this reducer\r\n    let boxscore = useSelector((state) => state.gameReducer.game)\r\n    const { token } = useSelector((state) => state.authReducer)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const clicked = (event) => {\r\n        event.preventDefault()\r\n\r\n        if (token) {\r\n            let gameID = gameData.gameId\r\n            let gameDate = gameData.startDateEastern\r\n\r\n            let lastFiveToken = token.slice(-5)\r\n            let gameID_token = gameID + lastFiveToken\r\n\r\n            axios.defaults.headers = {\r\n                Authorization: `Token ${token}`,\r\n            }\r\n\r\n            axios\r\n                .post('http://127.0.0.1:8000/api/create/', {\r\n                    gameDate: gameDate,\r\n                    gameID_token: gameID_token,\r\n                    gameID: gameID,\r\n                })\r\n                .then(() => {\r\n                    dispatch(\r\n                        alert_action.setAlert(\r\n                            'Games added to dashboard',\r\n                            'success'\r\n                        )\r\n                    )\r\n                })\r\n                .catch((err) => {\r\n                    if (err.response.data.gameID_token) {\r\n                        dispatch(\r\n                            alert_action.setAlert(\r\n                                'This game is already in your dashboard',\r\n                                'danger'\r\n                            )\r\n                        )\r\n                    }\r\n                })\r\n        } else {\r\n            dispatch(\r\n                alert_action.setAlert(\r\n                    'You must have a profile to add games',\r\n                    'danger'\r\n                )\r\n            )\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (gameData !== null) {\r\n            let gameID = gameData.gameId\r\n            let gameDate = gameData.startDateEastern\r\n\r\n            try {\r\n                dispatch(actions.getGame(gameDate, gameID))\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }, [gameData, dispatch])\r\n\r\n    const classes = GamesTableStyles()\r\n\r\n    if (gameData === null) {\r\n        return (\r\n            <Fragment>\r\n                <TableContainer>\r\n                    <Typography variant=\"h6\" id=\"tableTitle\">\r\n                        Please choose a Game\r\n                    </Typography>\r\n                </TableContainer>\r\n            </Fragment>\r\n        )\r\n    } else if (boxscore == null) {\r\n        return <Spinner />\r\n    } else if (boxscore != null && boxscore.stats == null) {\r\n        return (\r\n            <Fragment>\r\n                <div>\r\n                    <Typography\r\n                        className={classes.title}\r\n                        variant=\"h6\"\r\n                        id=\"tableTitle\"\r\n                    >\r\n                        No stats available now. Check again when the game\r\n                        starts.\r\n                    </Typography>\r\n                    <TableContainer className={classes.gameInfoTable}>\r\n                        <Table\r\n                            className={classes.gameInfotable}\r\n                            aria-label=\"simple table\"\r\n                        >\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Game Start</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell component=\"th\">\r\n                                        {\r\n                                            boxscore.basicGameData\r\n                                                .startTimeEastern\r\n                                        }\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    } else {\r\n        const visitingTeamStatsLeaders = boxscore.stats.vTeam.leaders\r\n        const homeTeamStatsLeaders = boxscore.stats.hTeam.leaders\r\n\r\n        return (\r\n            <Fragment>\r\n                <Grid item xs={12} sm={6} className={classes.gameInfotable}>\r\n                    <TableContainer className={classes.table}>\r\n                        <Typography\r\n                            className={classes.title}\r\n                            variant=\"h6\"\r\n                            id=\"tableTitle\"\r\n                        >\r\n                            {boxscore.basicGameData.vTeam.triCode +\r\n                                ' VS ' +\r\n                                boxscore.basicGameData.hTeam.triCode}\r\n                        </Typography>\r\n\r\n                        <Table aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Team</TableCell>\r\n                                    <TableCell>Points</TableCell>\r\n                                    <TableCell>Rebounds</TableCell>\r\n                                    <TableCell>Assist</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell component=\"th\">\r\n                                        {boxscore.basicGameData.vTeam.triCode}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {visitingTeamStatsLeaders.points\r\n                                            .players[0].lastName +\r\n                                            ': ' +\r\n                                            visitingTeamStatsLeaders.points\r\n                                                .value}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {visitingTeamStatsLeaders.rebounds\r\n                                            .players[0].lastName +\r\n                                            ': ' +\r\n                                            visitingTeamStatsLeaders.rebounds\r\n                                                .value}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {visitingTeamStatsLeaders.assists\r\n                                            .players[0].lastName +\r\n                                            ': ' +\r\n                                            visitingTeamStatsLeaders.assists\r\n                                                .value}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell component=\"th\">\r\n                                        {boxscore.basicGameData.hTeam.triCode}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {homeTeamStatsLeaders.points.players[0]\r\n                                            .lastName +\r\n                                            ': ' +\r\n                                            homeTeamStatsLeaders.points.value}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {homeTeamStatsLeaders.rebounds\r\n                                            .players[0].lastName +\r\n                                            ': ' +\r\n                                            homeTeamStatsLeaders.rebounds.value}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {homeTeamStatsLeaders.assists.players[0]\r\n                                            .lastName +\r\n                                            ': ' +\r\n                                            homeTeamStatsLeaders.assists.value}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    <Link to=\"/track\">\r\n                        <ColorButton\r\n                            className={classes.button}\r\n                            onClick={clicked}\r\n                        >\r\n                            Add to my games\r\n                        </ColorButton>\r\n                    </Link>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GamesTable\r\n","import axios from 'axios'\r\nimport {GET_GAME} from './types'\r\n\r\n\r\nexport const getGame = (gameDate, gameID) => dispatch => {\r\n   \r\n\r\n    axios.get(`http://127.0.0.1:8000/games/${gameDate}/${gameID}`)\r\n    .then(res => {\r\n        dispatch({\r\n            type: GET_GAME,\r\n            payload: res.data\r\n        })\r\n    }).catch(err => {\r\n        console.log(err)\r\n    })\r\n    \r\n}","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst CalendarStyles = makeStyles({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    gamesPaper: {\r\n        paddingRight: 50,\r\n        paddingLeft: 50,\r\n        \r\n        marginBottom: 30,\r\n        \r\n        \r\n        height: 500,\r\n        width: 300,\r\n        overflowY: 'auto',\r\n        background: '#343a40',\r\n    },\r\n    showGamesItem: {\r\n        marginLeft: -50,\r\n        width: 'auto',\r\n        height: 'auto',\r\n\r\n        '& p': {\r\n            textAlign: 'center',\r\n            color: 'black',\r\n            marginTop: 30,\r\n        },\r\n    },\r\n\r\n    gameInfoItem: {\r\n       \r\n        background: 'white',\r\n        minWidth: 300,\r\n        \r\n        width: 'auto',\r\n        height: 300,\r\n    },\r\n\r\n    ListItem: {\r\n        background: 'pink',\r\n        textAlign: 'center',\r\n\r\n        marginTop: 30,\r\n        marginBottom: 30,\r\n    },\r\n    table: {\r\n        minWidth: 300,\r\n        width: 'auto',\r\n    },\r\n\r\n    title: {\r\n        flex: '1 1 100%',\r\n        textAlign: 'center',\r\n    },\r\n\r\n    datePickerGrid: {\r\n        marginLeft: 100,\r\n        marginTop: 50    \r\n    },\r\n\r\n    gamesDisplayGrid: {\r\n        marginLeft: 100,\r\n        marginTop: 50\r\n    },\r\n\r\n    datePicker: {\r\n        backgroundColor: '#D3D3D3',\r\n        width: 280,\r\n        fontSize: 'large',\r\n        textAlign: 'center',\r\n        \r\n        \r\n    },\r\n\r\n    gameTableGrid:{\r\n        marginLeft: 100,\r\n        marginTop: 50,\r\n        backgroundColor: 'red'    \r\n    }\r\n\r\n    \r\n})\r\n\r\nexport default CalendarStyles\r\n","import React from 'react'\r\nimport Calender from 'react-calendar'\r\nimport './Calendar.css'\r\nimport { Grid } from '@material-ui/core'\r\nimport CalendarStyles from './CalenderStyles'\r\n\r\n\r\nexport default function calendar({ gamesDateProp, handleClick }) {\r\n    const classes = CalendarStyles()\r\n\r\n    return (\r\n        <div>\r\n            <Grid>\r\n                <div>\r\n                    <Calender\r\n                        selected={gamesDateProp}\r\n                        value={gamesDateProp}\r\n                        onChange={(date) => {\r\n                            handleClick(date)\r\n                        }}\r\n                        minDate={new Date(2015, 10, 6)}\r\n                        maxDate={new Date(2020, 2, 10)}\r\n                        className={classes.datePicker}\r\n                    />\r\n                </div>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n","export function parseDate(customDate,  separator = '', reverse = false, passedDate = null) {\r\n    if (customDate == null) {\r\n        customDate = new Date()\r\n        \r\n    }\r\n\r\n    let day = customDate.getDate()\r\n    let month = customDate.getMonth() + 1\r\n    let year = customDate.getFullYear()\r\n\r\n    if (reverse) {\r\n        return `${month < 10 ? `0${month}` : `${month}`}${separator}${\r\n            day < 10 ? `0${day}` : `${day}`\r\n        }${separator}${year}`\r\n    }\r\n\r\n    return `${year}${separator}${\r\n        month < 10 ? `0${month}` : `${month}`\r\n    }${separator}${day < 10 ? `0${day}` : `${day}`}`\r\n}","import axios from 'axios'\r\nimport {GET_GAMES} from './types'\r\n\r\n\r\n// all our request go here\r\n\r\n// GET GAMES\r\nexport const getGames = (date) => dispatch => {\r\n    \r\n    //console.log('Date', date)\r\n    axios.get(`http://127.0.0.1:8000/games/${date}`)\r\n    .then(res => {\r\n        \r\n        dispatch({            \r\n            type: GET_GAMES,\r\n            payload: res.data\r\n        })\r\n    }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Grid, Paper, List, ListItem, ListItemText } from '@material-ui/core'\r\nimport Spinner from '../Spinner'\r\nimport GamesStyles from './GameStyles'\r\nimport GamesTable from './GamesTable/GamesTable'\r\nimport { CustomCalendar } from './Calendar'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n// utility function to parse date from calendar choice\r\nimport { parseDate } from '../utility/parseDate'\r\n\r\n// import actions from redux store\r\nimport * as actions from '../../store/actions/games'\r\n\r\nconst Games = () => {\r\n    const gamesData = useSelector((state) => state.gamesReducer.games)\r\n    const dispatch = useDispatch()\r\n\r\n    // may not need local state\r\n    const [gameData, setGameData] = useState(null)\r\n    const [gameDate, setGameDate] = useState(new Date(2020, 2, 10))\r\n    const classes = GamesStyles()\r\n\r\n    useEffect(() => {\r\n        const date = parseDate(gameDate)\r\n        try {\r\n            dispatch(actions.getGames(`${date}`))\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }, [gameDate, dispatch])\r\n\r\n    // data has not been loaded yet\r\n    if (gamesData == null) {\r\n        return (\r\n            <div>\r\n                <Spinner />\r\n            </div>\r\n        )\r\n    } else {\r\n        // change this\r\n        const games = gamesData.games\r\n\r\n        return (\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                alignItems=\"flex-start\"\r\n                spacing={1}\r\n                className={classes.root}\r\n            >\r\n                <Grid className={classes.datePickerGrid} item xs={2}>\r\n                    <h4>Pick a date </h4>\r\n                    <CustomCalendar\r\n                        gamesDateProp={new Date()}\r\n                        handleClick={setGameDate}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid className={classes.gamesDisplayGrid} item xs={3}>\r\n                    <h4>Games on {parseDate(gameDate, '/', true)}:</h4>\r\n                    <Paper className={classes.gamesPaper}>\r\n                        <Fragment>\r\n                            <List>\r\n                                {games.map((game) => {\r\n                                    return (\r\n                                        <ListItem\r\n                                            key={game.gameId}\r\n                                            button\r\n                                            className={classes.ListItem}\r\n                                            onClick={() => {\r\n                                                setGameData(game)\r\n                                            }}\r\n                                        >\r\n                                            <ListItemText\r\n                                                primary={\r\n                                                    game.vTeam.triCode +\r\n                                                    ' VS ' +\r\n                                                    game.hTeam.triCode\r\n                                                }\r\n                                            />\r\n                                        </ListItem>\r\n                                    )\r\n                                })}\r\n                            </List>\r\n                        </Fragment>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid\r\n                    container\r\n                    item\r\n                    xs={4}\r\n                    spacing={3}\r\n                    className={classes.gameTableGrid}\r\n                >\r\n                    <h4>Game Track</h4>\r\n                    <GamesTable gameData={gameData} />\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Games\r\n","import React, { useState } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport './auth.css'\r\nimport { Spin } from 'antd'\r\nimport * as actions from '../../store/actions/auth'\r\n\r\nconst LogIn = (props) => {\r\n    // object with field values\r\n    const [formData, setFormData] = useState({\r\n        username: '',\r\n        password: '',\r\n    })\r\n\r\n    const { username, password } = formData\r\n\r\n    const onChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault()\r\n        props.onAuthLogin(username, password)\r\n        //props.history.push('/login') // redirect\r\n    }\r\n\r\n    let errorMessage = null\r\n    if (props.error) {\r\n        errorMessage = <p>{props.error.message}</p>\r\n    }\r\n\r\n    // Redirect if logged in\r\n    if (props.auth.isAuthenticated) {\r\n        return <Redirect to=\"/dashboard\" />\r\n    }\r\n    return (\r\n        <div>\r\n            {errorMessage}\r\n            {props.loading ? (\r\n                <Spin />\r\n            ) : (\r\n                <div className=\"form\">\r\n                    <form onSubmit={(e) => onSubmit(e)}>\r\n                        <div className=\"form-group\">\r\n                            <label>User Name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Enter username\"\r\n                                name=\"username\"\r\n                                onChange={(e) => onChange(e)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Password\"\r\n                                name=\"password\"\r\n                                onChange={(e) => onChange(e)}\r\n                            />\r\n                        </div>\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"login-form-button btn btn-primary\"\r\n                        >\r\n                            Login\r\n                        </button>\r\n                        <div>\r\n                            <small className=\"small-text form-text text-muted\">\r\n                                Need to sign up?\r\n                            </small>\r\n                            <Link\r\n                                className=\"signup-form-button btn btn-secondary\"\r\n                                to=\"/register\"\r\n                            >\r\n                                Sign Up\r\n                            </Link>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.authReducer,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onAuthLogin: (username, password) =>\r\n            dispatch(actions.authLogin(username, password)),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LogIn)\r\n","import React, { useState } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport * as actions from '../../store/actions/auth'\r\nimport { connect } from 'react-redux'\r\nimport Spinner from '../Spinner'\r\n\r\nconst Register = (props) => {\r\n    // object with field values\r\n    const [formData, setFormData] = useState({\r\n        username: '',\r\n        email: '',\r\n        password1: '',\r\n        password2: '',\r\n    })\r\n\r\n    const { username, email, password1, password2 } = formData\r\n\r\n    const onChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        props.onAuthSignUp(username, email, password1, password2)\r\n\r\n        //props.history.push('/') // redirect\r\n        if (props.auth.isAuthenticated) {\r\n            setFormData({\r\n                username: '',\r\n                email: '',\r\n                password1: '',\r\n                password2: '',\r\n            })\r\n        }\r\n    }\r\n\r\n    let errorMessage = null\r\n    if (props.error) {\r\n        errorMessage = <p>{props.error.message}</p>\r\n    }\r\n\r\n    // Redirect if logged in\r\n    if (props.auth.isAuthenticated) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n    return (\r\n        <div>\r\n            {errorMessage}\r\n            {props.loading ? (\r\n                <Spinner />\r\n            ) : (\r\n                <div className=\"form\">\r\n                    <form onSubmit={(e) => onSubmit(e)}>\r\n                        <div className=\"form-group\">\r\n                            <label>Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Enter email\"\r\n                                name=\"email\"\r\n                                onChange={(e) => onChange(e)}\r\n                                value={email}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>User Name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"User Name\"\r\n                                name=\"username\"\r\n                                onChange={(e) => onChange(e)}\r\n                                value={username}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Password\"\r\n                                name=\"password1\"\r\n                                onChange={(e) => onChange(e)}\r\n                                value={password1}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Confirm Password\"\r\n                                name=\"password2\"\r\n                                onChange={(e) => onChange(e)}\r\n                                value={password2}\r\n                            />\r\n                        </div>\r\n\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"register-form-button btn btn-primary\"\r\n                        >\r\n                            Register\r\n                        </button>\r\n\r\n                        <div>\r\n                            <small className=\"small-text form-text text-muted\">\r\n                                Already have an account?\r\n                            </small>\r\n                            <Link\r\n                                className=\"login-form-button btn btn-secondary\"\r\n                                to=\"/login\"\r\n                            >\r\n                                Login\r\n                            </Link>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.authReducer,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onAuthSignUp: (username, email, password1, password2) =>\r\n            dispatch(actions.authSignup(username, email, password1, password2)),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)\r\n","import React from 'react'\r\n\r\nexport default function NoMatch() {\r\n    return (\r\n        <div>\r\n            <h1>That page does not exist</h1>\r\n            <h2>Click on the logo to go the homepage</h2>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Route, Redirect} from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nfunction PrivateRoute (props) {\r\n\r\n    const Component = props.component;\r\n    const {isAuthenticated, loading} = useSelector((state) => state.authReducer)\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    return (\r\n        <Route \r\n        render={props =>\r\n                !isAuthenticated && !loading  ? (\r\n                    <Redirect to=\"/login\" />\r\n                ) : (\r\n                    <Component {...props} />\r\n                )\r\n            }       \r\n        />\r\n            \r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default PrivateRoute;\r\n\r\n\r\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst GamesTableStyles = makeStyles({\r\n    \r\n\r\n    gameInfotable: {       \r\n        background: '#343a40',\r\n        minWidth: 600,        \r\n        width: 'auto',\r\n        height: 300,\r\n        marginRight: 30,\r\n        overflowX: 'scroll'\r\n    },\r\n\r\n    \r\n    table: {\r\n        minWidth: 500,      \r\n        width: 'auto',\r\n        'background': 'pink',\r\n        \r\n    },\r\n\r\n    title: {\r\n        flex: '1 1 100%',\r\n        textAlign: 'center',\r\n    },\r\n\r\n    button: {\r\n        width: 200,\r\n        marginTop: 20\r\n    }\r\n    \r\n})\r\n\r\nexport default GamesTableStyles\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Grid } from '@material-ui/core'\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n} from '@material-ui/core'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport GamesTableStyles from './GamesTableStyles'\r\nimport Spinner from '../Spinner'\r\n// import { useDispatch } from 'react-redux'\r\n//import * as actions from '../../store/actions/alert'\r\n\r\nconst DashboardGamesTable = (props) => {\r\n    const [gameData, setGameData] = useState(null)\r\n\r\n    //const dispatch = useDispatch()\r\n\r\n    const call = (gameDate, gameID) => {\r\n        axios\r\n            .get(`http://127.0.0.1:8000/games/${gameDate}/${gameID}`)\r\n            .then((res) => {\r\n                setGameData(res.data)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const handleClick = () => {\r\n        let token = localStorage.getItem('token')\r\n        axios.defaults.headers = {\r\n            Authorization: `Token ${token}`,\r\n        }\r\n        axios\r\n            .delete(`http://127.0.0.1:8000/api/${props.id}/delete`)\r\n            .then(() => {\r\n                window.location = '/dashboard'\r\n            })\r\n            .catch((err) => {\r\n                console.log('Error in dashboard Delete: ', err)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        call(props.gameDate, props.gameID)\r\n    }, [props.gameDate, props.gameID])\r\n    const classes = GamesTableStyles()\r\n\r\n    if (gameData === null) {\r\n        return <Spinner />\r\n    } else {\r\n        const visitingTeamStatsLeaders = gameData.stats.vTeam.leaders\r\n        const homeTeamStatsLeaders = gameData.stats.hTeam.leaders\r\n\r\n        return (\r\n            <Fragment>\r\n                <Grid item xs={12} sm={6} className={classes.gameInfotable}>\r\n                    <TableContainer className={classes.table}>\r\n                        <Typography\r\n                            className={classes.title}\r\n                            variant=\"h6\"\r\n                            id=\"tableTitle\"\r\n                        >\r\n                            {gameData.basicGameData.vTeam.triCode +\r\n                                ' VS ' +\r\n                                gameData.basicGameData.hTeam.triCode}\r\n                        </Typography>\r\n\r\n                        <Table aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Team</TableCell>\r\n                                    <TableCell>Points</TableCell>\r\n                                    <TableCell>Rebounds</TableCell>\r\n                                    <TableCell>Assist</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell component=\"th\">\r\n                                        {gameData.basicGameData.vTeam.triCode}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {visitingTeamStatsLeaders.points\r\n                                            .players[0].lastName +\r\n                                            ': ' +\r\n                                            visitingTeamStatsLeaders.points\r\n                                                .value}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {visitingTeamStatsLeaders.rebounds\r\n                                            .players[0].lastName +\r\n                                            ': ' +\r\n                                            visitingTeamStatsLeaders.rebounds\r\n                                                .value}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {visitingTeamStatsLeaders.assists\r\n                                            .players[0].lastName +\r\n                                            ': ' +\r\n                                            visitingTeamStatsLeaders.assists\r\n                                                .value}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell component=\"th\">\r\n                                        {gameData.basicGameData.hTeam.triCode}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {homeTeamStatsLeaders.points.players[0]\r\n                                            .lastName +\r\n                                            ': ' +\r\n                                            homeTeamStatsLeaders.points.value}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {homeTeamStatsLeaders.rebounds\r\n                                            .players[0].lastName +\r\n                                            ': ' +\r\n                                            homeTeamStatsLeaders.rebounds.value}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {homeTeamStatsLeaders.assists.players[0]\r\n                                            .lastName +\r\n                                            ': ' +\r\n                                            homeTeamStatsLeaders.assists.value}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    <button\r\n                        style={{ marginTop: 20 }}\r\n                        className=\"btn btn-danger\"\r\n                        onClick={handleClick}\r\n                    >\r\n                        Remove Game\r\n                    </button>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DashboardGamesTable\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useSelector } from 'react-redux'\r\nimport Spinner from '../Spinner'\r\nimport DashboardGameTable from './DashboardGameTable'\r\n\r\nconst Dashboard = () => {\r\n    const [userGames, setUserGames] = useState(null)\r\n\r\n    // not needed since you can't access page w/o being logged in\r\n    const { token } = useSelector((state) => state.authReducer)\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            axios.defaults.headers = {\r\n                Authorization: `Token ${token}`,\r\n            }\r\n\r\n            axios\r\n                .get(`http://127.0.0.1:8000/api/`)\r\n                .then((res) => {\r\n                    //console.log(res.data)\r\n                    setUserGames(res.data)\r\n                })\r\n                .catch((err) => {\r\n                    console.log('Error in dashboard: ', err)\r\n                })\r\n        }\r\n    }, [token])\r\n\r\n    if (userGames === null) {\r\n        return <Spinner />\r\n    } else if (userGames.length !== 0) {\r\n        return (\r\n            <div>\r\n                <h1\r\n                    style={{\r\n                        textAlign: 'center',\r\n                        marginTop: 20,\r\n                        marginBottom: 20,\r\n                    }}\r\n                >\r\n                    Your Games\r\n                </h1>\r\n\r\n                <div\r\n                    style={{\r\n                        textAlign: 'center',\r\n                        overflowY: 'auto',\r\n                        height: 500,\r\n                    }}\r\n                >\r\n                    {userGames.map((game) => {\r\n                        return (\r\n                            <div\r\n                                key={game.id}\r\n                                style={{\r\n                                    marginTop: 50,\r\n                                    marginLeft: 500,\r\n                                    marginRight: 'auto',\r\n                                    width: '50%',\r\n                                    padding: 'auto',\r\n                                }}\r\n                            >\r\n                                <DashboardGameTable\r\n                                    id={game.id}\r\n                                    gameDate={game.gameDate}\r\n                                    gameID={game.gameID}\r\n                                />\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <h1 style={{ dispaly: 'flex', textAlign: 'center' }}>\r\n                Please add games to your dashboard\r\n            </h1>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Alert = ({ alerts }) =>\r\n    alerts !== null &&\r\n    alerts.length > 0 &&\r\n    alerts.map((alert) => (\r\n        <div\r\n            key={alert.id}\r\n            style={{ textAlign: 'center' }}\r\n            className={`alert alert-${alert.alertType}`}\r\n        >\r\n            {alert.msg}\r\n        </div>\r\n    ))\r\n\r\nAlert.propTypes = {\r\n    alerts: PropTypes.array.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        alerts: state.alertReducer, // from reducer\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Alert)\r\n","import React, { Fragment, useEffect } from 'react'\r\n// import axios from 'axios'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport {\r\n    Home,\r\n    Header,\r\n    Track,\r\n    Login,\r\n    Register,\r\n    NoMatch,\r\n    PrivateRoute,\r\n    Dashboard,\r\n    Alert,\r\n} from './components/exports'\r\nimport { connect } from 'react-redux'\r\nimport './App.css'\r\nimport * as actions from './store/actions/auth'\r\n\r\nfunction App(props) {\r\n    useEffect(() => {\r\n        props.onTryAutoSignup()\r\n    })\r\n\r\n    return (\r\n        <Router>\r\n            <Fragment>\r\n                <Header auth={props} />\r\n                <div className=\"App\">\r\n                    <div>\r\n                        <Alert />\r\n                    </div>\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Home}></Route>\r\n                        <Route exact path=\"/track\" component={Track} />\r\n                        <Route exact path=\"/login\" component={Login} />\r\n                        <Route exact path=\"/register\" component={Register} />\r\n                        <PrivateRoute\r\n                            exact\r\n                            path=\"/dashboard\"\r\n                            component={Dashboard}\r\n                            auth={props}\r\n                        />\r\n                        <Route component={NoMatch} />\r\n                    </Switch>\r\n                </div>\r\n            </Fragment>\r\n        </Router>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuthenticated: state.authReducer.token !== null,\r\n        username: state.authReducer.username,\r\n        token: state.authReducer.token,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onTryAutoSignup: () => dispatch(actions.authCheckState()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store/store'\r\nimport App from './App'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n// import $ from 'jquery'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nconst app = (\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n)\r\n\r\nReactDOM.render(app, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","module.exports = __webpack_public_path__ + \"static/media/demo.84b8b50d.gif\";","module.exports = __webpack_public_path__ + \"static/media/trackerlogo.d54d523b.png\";","module.exports = __webpack_public_path__ + \"static/media/spinner.0c6f34a3.gif\";"],"sourceRoot":""}